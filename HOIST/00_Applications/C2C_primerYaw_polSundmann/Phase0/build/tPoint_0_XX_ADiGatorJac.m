% This code was generated using ADiGator version 1.4
% Â©2010-2014 Matthew J. Weinstein and Anil V. Rao
% ADiGator may be obtained at https://sourceforge.net/projects/adigator/ 
% Contact: mweinstein@ufl.edu
% Bugs/suggestions may be reported to the sourceforge forums
%                    DISCLAIMER
% ADiGator is a general-purpose software distributed under the GNU General
% Public License version 3.0. While the software is distributed with the
% hope that it will be useful, both the software and generated code are
% provided 'AS IS' with NO WARRANTIES OF ANY KIND and no merchantability
% or fitness for any purpose or application.

function tPoint_X = tPoint_0_XX_ADiGatorJac(k,X)
global ADiGator_tPoint_0_XX_ADiGatorJac
if isempty(ADiGator_tPoint_0_XX_ADiGatorJac); ADiGator_LoadData(); end
Gator1Data = ADiGator_tPoint_0_XX_ADiGatorJac.tPoint_0_XX_ADiGatorJac.Gator1Data;
% ADiGator Start Derivative Computations
gator_X.f.dX = X.dX; gator_X.f.f = X.f;
%User Line: gator_X.f = X;
gator_X.dX.f = [1;1;1];
%User Line: gator_X.dX = ones(3,1);
cadainput2_1 = k;
%User Line: cadainput2_1 = k;
cadainput2_2 = gator_X;
cadainput2_2.dX = gator_X.dX.f;
cadainput2_2.f = gator_X.f.f;
%User Line: cadainput2_2 = gator_X;
cadaoutput2_1 = tPoint_0_X_ADiGatorJac(cadainput2_1,cadainput2_2);
% Call to function: tPoint_0_X_ADiGatorJac
tPoint = cadaoutput2_1;
%User Line: tPoint = cadaoutput2_1;
tPoint.dX.f = [0;0;0];
%User Line: tPoint.dX = zeros(3,1);
tPoint_X.f =  zeros(1,3);
%User Line: tPoint_X = zeros(1,3);
end
function tPoint = tPoint_0_X_ADiGatorJac(k,X)
global ADiGator_tPoint_0_XX_ADiGatorJac
Gator1Data = ADiGator_tPoint_0_XX_ADiGatorJac.tPoint_0_X_ADiGatorJac.Gator1Data;
Gator2Data = ADiGator_tPoint_0_XX_ADiGatorJac.tPoint_0_X_ADiGatorJac.Gator2Data;
% ADiGator Start Derivative Computations
%User Line: % Stage collocation wrapper function for phase 0,
%User Line: % automatically generated by the PhaseManager class on 06-Dec-2024 12:50:01
x.dX = X.dX(1);
% Deriv 1 Line: x.dX = X.dX(1);
x.f = X.f(1,1);
% Deriv 1 Line: x.f = X.f(1,1);
%User Line: x = X(1: 1, 1);
u.dX = X.dX(2);
% Deriv 1 Line: u.dX = X.dX(2);
u.f = X.f(2,1);
% Deriv 1 Line: u.f = X.f(2,1);
%User Line: u = X(2: 2, 1);
w.dX = X.dX(3);
% Deriv 1 Line: w.dX = X.dX(3);
w.f = X.f(3,1);
% Deriv 1 Line: w.f = X.f(3,1);
%User Line: w = X(3: 3, 1);
cadainput2_1 = k;
% Deriv 1 Line: cadainput2_1 = k;
%User Line: cadainput2_1 = k;
cadainput2_2.dX = x.dX;
% Deriv 1 Line: cadainput2_2.dX = x.dX;
cadainput2_2.f = x.f;
% Deriv 1 Line: cadainput2_2.f = x.f;
%User Line: cadainput2_2 = x;
cadainput2_3.dX = u.dX;
% Deriv 1 Line: cadainput2_3.dX = u.dX;
cadainput2_3.f = u.f;
% Deriv 1 Line: cadainput2_3.f = u.f;
%User Line: cadainput2_3 = u;
cadainput2_4.dX = w.dX;
% Deriv 1 Line: cadainput2_4.dX = w.dX;
cadainput2_4.f = w.f;
% Deriv 1 Line: cadainput2_4.f = w.f;
%User Line: cadainput2_4 = w;
cadainput3_1 = cadainput2_1;
% Deriv 1 Line: cadainput3_1 = cadainput2_1;
cadainput3_2 = cadainput2_2;
% Deriv 1 Line: cadainput3_2 = cadainput2_2;
cadainput3_3 = cadainput2_3;
% Deriv 1 Line: cadainput3_3 = cadainput2_3;
cadainput3_4 = cadainput2_4;
% Deriv 1 Line: cadainput3_4 = cadainput2_4;
cadaoutput3_1 = ADiGator_stage_collocation_01(cadainput3_1,cadainput3_2,cadainput3_3,cadainput3_4);
% Call to function: ADiGator_stage_collocation_01
cadaoutput2_1 = cadaoutput3_1;
% Deriv 1 Line: cadaoutput2_1 = cadaoutput3_1;
% Call to function: stage_collocation_0
tPoint.f = cadaoutput2_1.f;
% Deriv 1 Line: tPoint.f = cadaoutput2_1.f;
%User Line: tPoint = cadaoutput2_1;
end
function tPoint = ADiGator_stage_collocation_01(k,x,u,w)
global ADiGator_tPoint_0_XX_ADiGatorJac
Gator1Data = ADiGator_tPoint_0_XX_ADiGatorJac.ADiGator_stage_collocation_01.Gator1Data;
Gator2Data = ADiGator_tPoint_0_XX_ADiGatorJac.ADiGator_stage_collocation_01.Gator2Data;
% ADiGator Start Derivative Computations
%User Line: % function that sets the default stage collocation for the dummy phase 0
tPoint.f = 0;
% Deriv 1 Line: tPoint.f =  0;
%User Line: tPoint = 0;
end


function ADiGator_LoadData()
global ADiGator_tPoint_0_XX_ADiGatorJac
ADiGator_tPoint_0_XX_ADiGatorJac = load('tPoint_0_XX_ADiGatorJac.mat');
return
end