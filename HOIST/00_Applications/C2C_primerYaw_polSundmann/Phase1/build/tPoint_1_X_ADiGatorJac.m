% This code was generated using ADiGator version 1.4
% Â©2010-2014 Matthew J. Weinstein and Anil V. Rao
% ADiGator may be obtained at https://sourceforge.net/projects/adigator/ 
% Contact: mweinstein@ufl.edu
% Bugs/suggestions may be reported to the sourceforge forums
%                    DISCLAIMER
% ADiGator is a general-purpose software distributed under the GNU General
% Public License version 3.0. While the software is distributed with the
% hope that it will be useful, both the software and generated code are
% provided 'AS IS' with NO WARRANTIES OF ANY KIND and no merchantability
% or fitness for any purpose or application.

function tPoint = tPoint_1_X_ADiGatorJac(k,X)
global ADiGator_tPoint_1_X_ADiGatorJac
if isempty(ADiGator_tPoint_1_X_ADiGatorJac); ADiGator_LoadData(); end
Gator1Data = ADiGator_tPoint_1_X_ADiGatorJac.tPoint_1_X_ADiGatorJac.Gator1Data;
% ADiGator Start Derivative Computations
%User Line: % Stage collocation wrapper function for phase 1,
%User Line: % automatically generated by the PhaseManager class on 06-Dec-2024 12:49:23
x.dX = X.dX(Gator1Data.Index2);
x.f = X.f(Gator1Data.Index1,1);
%User Line: x = X(1: 4, 1);
u.dX = X.dX(5);
u.f = X.f(5,1);
%User Line: u = X(5: 5, 1);
w.dX = X.dX(6);
w.f = X.f(6,1);
%User Line: w = X(6: 6, 1);
cadainput2_1 = k;
%User Line: cadainput2_1 = k;
cadainput2_2.dX = x.dX; cadainput2_2.f = x.f;
%User Line: cadainput2_2 = x;
cadainput2_3.dX = u.dX; cadainput2_3.f = u.f;
%User Line: cadainput2_3 = u;
cadainput2_4.dX = w.dX; cadainput2_4.f = w.f;
%User Line: cadainput2_4 = w;
cadaoutput2_1 = ADiGator_stage_collocation_11(cadainput2_1,cadainput2_2,cadainput2_3,cadainput2_4);
% Call to function: stage_collocation_1
tPoint.f = cadaoutput2_1.f;
%User Line: tPoint = cadaoutput2_1;
end
function tPoint = ADiGator_stage_collocation_11(k,x,u,w)
global ADiGator_tPoint_1_X_ADiGatorJac
Gator1Data = ADiGator_tPoint_1_X_ADiGatorJac.ADiGator_stage_collocation_11.Gator1Data;
% ADiGator Start Derivative Computations
%User Line: % function that outputs the time collocation of stage k for the current
%User Line: % phase
global auxdata 
%User Line: global
%User Line: % get the number of stages
nStages = auxdata.nStages;
%User Line: nStages = auxdata.nStages;
%User Line: % get the initial and final true longitude
tau0 = auxdata.theta0bar;
%User Line: tau0 = auxdata.theta0bar;
tauf = auxdata.thetafbar;
%User Line: tauf = auxdata.thetafbar;
%User Line: % set the current stage collocation point
cada1f1 = tauf - tau0;
cada1f2 = nStages - 1;
cada1f3 = cada1f1/cada1f2;
cada1f4 = k - 1;
cada1f5 = cada1f3*cada1f4;
tPoint.f = tau0 + cada1f5;
%User Line: tPoint = tau0 + ((tauf - tau0)/(nStages - 1)) * (k - 1);
end


function ADiGator_LoadData()
global ADiGator_tPoint_1_X_ADiGatorJac
ADiGator_tPoint_1_X_ADiGatorJac = load('tPoint_1_X_ADiGatorJac.mat');
return
end