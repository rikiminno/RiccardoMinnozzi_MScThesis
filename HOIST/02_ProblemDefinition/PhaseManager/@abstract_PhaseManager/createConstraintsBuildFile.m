function obj = createConstraintsBuildFile(obj)
% function that creates the constraints warpper function file

% get the phase number and the inputs dimensions
i = obj.ID(2);
[nx, ~, nw, nl, nxp, nwp] = getInputSizes(obj);
nI = nx + nw + nxp + nwp + nl;

% create the constraints wrapper file
obj.Psi_file = strcat("Psi_", string(i));
id = fopen(strcat(obj.Psi_file, ".m"), "w+");
fprintf(id, strcat("function Psi = ", obj.Psi_file, ...
    "(I) \n"));
commentStr = strcat("%% Constraints wrapper function for phase ", ...
    string(i), ",\n%% automatically generated by the PhaseManager_Psi class on ", ...
    datestr(datetime("now")), "\n");
fprintf(id, commentStr);
% set the wrapped inputs
fprintf(id, strcat("xm = I(1: ", string(nx), ", 1); \n"));
fprintf(id, strcat("wm = I(", string(nx + 1), ": ", string(nx + nw), ...
    ", 1); \n"));
fprintf(id, strcat("xp = I(", string(nx + nw + 1), ": ", ...
    string(nx + nw + nxp), ", 1); \n"));
fprintf(id, strcat("wp = I(", string(nx + nw + nxp + 1), ": ", ...
    string(nx + nw + nxp + nwp), ", 1); \n"));
fprintf(id, strcat("lm = I(", string(nx + nw + nxp + nwp + 1), ": ", ...
    string(nI), ", 1); \n"));
fprintf(id, "\n");
% set the function output
fprintf(id, strcat("Psi = ", obj.terminalConstraintFile, "(xm, wm, xp, wp);\n"));
fprintf(id, "end");
fclose(id);

end

