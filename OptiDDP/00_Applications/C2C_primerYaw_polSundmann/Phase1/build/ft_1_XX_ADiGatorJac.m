% This code was generated using ADiGator version 1.4
% Â©2010-2014 Matthew J. Weinstein and Anil V. Rao
% ADiGator may be obtained at https://sourceforge.net/projects/adigator/ 
% Contact: mweinstein@ufl.edu
% Bugs/suggestions may be reported to the sourceforge forums
%                    DISCLAIMER
% ADiGator is a general-purpose software distributed under the GNU General
% Public License version 3.0. While the software is distributed with the
% hope that it will be useful, both the software and generated code are
% provided 'AS IS' with NO WARRANTIES OF ANY KIND and no merchantability
% or fitness for any purpose or application.

function Xdot_X = ft_1_XX_ADiGatorJac(t,X)
global ADiGator_ft_1_XX_ADiGatorJac
if isempty(ADiGator_ft_1_XX_ADiGatorJac); ADiGator_LoadData(); end
Gator1Data = ADiGator_ft_1_XX_ADiGatorJac.ft_1_XX_ADiGatorJac.Gator1Data;
% ADiGator Start Derivative Computations
gator_X.f.dX = X.dX; gator_X.f.f = X.f;
%User Line: gator_X.f = X;
gator_X.dX.f = [1;1;1;1;1;1];
%User Line: gator_X.dX = ones(6,1);
cadainput2_1 = t;
%User Line: cadainput2_1 = t;
cadainput2_2 = gator_X;
cadainput2_2.dX = gator_X.dX.f;
cadainput2_2.f = gator_X.f.f;
%User Line: cadainput2_2 = gator_X;
cadaoutput2_1 = ft_1_X_ADiGatorJac(cadainput2_1,cadainput2_2);
% Call to function: ft_1_X_ADiGatorJac
Xdot = cadaoutput2_1;
%User Line: Xdot = cadaoutput2_1;
Xdot_X.f =  zeros(6,6);
%User Line: Xdot_X = zeros(6,6);
cada1f1 = Xdot.dX_location(:,2);
cada1f2 = cada1f1 - 1;
cada1f3 = cada1f2*6;
cada1f4 = Xdot.dX_location(:,1);
cada1f5 = cada1f3 + cada1f4;
Xdot_X.dX = Xdot.dXdX;
Xdot_X.f(cada1f5) = Xdot.dX;
%User Line: Xdot_X((Xdot.dX_location(:,2)-1)*6+Xdot.dX_location(:,1)) = Xdot.dX;
Xdot_X.dX_size = [6,6,6];
Xdot_X.dX_location = Gator1Data.Index1;
end
function Xdot = ft_1_X_ADiGatorJac(t,X)
global ADiGator_ft_1_XX_ADiGatorJac
Gator1Data = ADiGator_ft_1_XX_ADiGatorJac.ft_1_X_ADiGatorJac.Gator1Data;
Gator2Data = ADiGator_ft_1_XX_ADiGatorJac.ft_1_X_ADiGatorJac.Gator2Data;
% ADiGator Start Derivative Computations
%User Line: % Augmented state derivative wrapper function for phase 1,
%User Line: % automatically generated by the PhaseManager class on 06-Dec-2024 12:49:23
%User Line: % Increase dynamics function evaluations
global HOIST_fevalsCount_ft 
% Deriv 1 Line: global
%User Line: global
HOIST_fevalsCount_ft = HOIST_fevalsCount_ft + 1;
% Deriv 1 Line: HOIST_fevalsCount_ft = HOIST_fevalsCount_ft + 1;
%User Line: HOIST_fevalsCount_ft = HOIST_fevalsCount_ft + 1;
x.dX = X.dX(Gator1Data.Index2);
% Deriv 1 Line: x.dX = X.dX(Gator1Data.Index2);
x.f = X.f(Gator1Data.Index1,1);
% Deriv 1 Line: x.f = X.f(Gator1Data.Index1,1);
%User Line: x = X(1: 4, 1);
u.dX = X.dX(5);
% Deriv 1 Line: u.dX = X.dX(5);
u.f = X.f(5,1);
% Deriv 1 Line: u.f = X.f(5,1);
%User Line: u = X(5: 5, 1);
w.dX = X.dX(6);
% Deriv 1 Line: w.dX = X.dX(6);
w.f = X.f(6,1);
% Deriv 1 Line: w.f = X.f(6,1);
%User Line: w = X(6: 6, 1);
cadainput2_1 = t;
% Deriv 1 Line: cadainput2_1 = t;
%User Line: cadainput2_1 = t;
cadainput2_2.dX = x.dX;
% Deriv 1 Line: cadainput2_2.dX = x.dX;
cadainput2_2.f = x.f;
% Deriv 1 Line: cadainput2_2.f = x.f;
%User Line: cadainput2_2 = x;
cadainput2_3.dX = u.dX;
% Deriv 1 Line: cadainput2_3.dX = u.dX;
cadainput2_3.f = u.f;
% Deriv 1 Line: cadainput2_3.f = u.f;
%User Line: cadainput2_3 = u;
cadainput2_4.dX = w.dX;
% Deriv 1 Line: cadainput2_4.dX = w.dX;
cadainput2_4.f = w.f;
% Deriv 1 Line: cadainput2_4.f = w.f;
%User Line: cadainput2_4 = w;
cadainput3_1 = cadainput2_1;
% Deriv 1 Line: cadainput3_1 = cadainput2_1;
cadainput3_2 = cadainput2_2;
% Deriv 1 Line: cadainput3_2 = cadainput2_2;
cadainput3_3 = cadainput2_3;
% Deriv 1 Line: cadainput3_3 = cadainput2_3;
cadainput3_4 = cadainput2_4;
% Deriv 1 Line: cadainput3_4 = cadainput2_4;
cadaoutput3_1 = ADiGator_state_derivative_1(cadainput3_1,cadainput3_2,cadainput3_3,cadainput3_4);
% Call to function: ADiGator_state_derivative_1
cadaoutput2_1 = cadaoutput3_1;
% Deriv 1 Line: cadaoutput2_1 = cadaoutput3_1;
% Call to function: state_derivative_1
xdot.dXdX = cadaoutput2_1.dXdX; xdot.dX = cadaoutput2_1.dX;
% Deriv 1 Line: xdot.dX = cadaoutput2_1.dX;
xdot.f = cadaoutput2_1.f;
% Deriv 1 Line: xdot.f = cadaoutput2_1.f;
%User Line: xdot = cadaoutput2_1;
udot.f = 0;
% Deriv 1 Line: udot.f =  zeros(1, 1);
%User Line: udot = zeros(1, 1);
wdot.f = 0;
% Deriv 1 Line: wdot.f =  zeros(1, 1);
%User Line: wdot = zeros(1, 1);
cada1td1 =  zeros(14,1);
% Deriv 1 Line: cada1td1 = zeros(14,1);
cada1td1dX = xdot.dXdX;
cada1td1(Gator1Data.Index3) = xdot.dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index3) = xdot.dX;
Xdot.dXdX = cada1td1dX; Xdot.dX = cada1td1;
% Deriv 1 Line: Xdot.dX = cada1td1;
Xdot.f = [xdot.f;udot.f;wdot.f];
% Deriv 1 Line: Xdot.f = [xdot.f;udot.f;wdot.f];
%User Line: Xdot = [xdot; udot; wdot];
Xdot.dX_size = [6 6];
% Deriv 1 Line: Xdot.dX_size = [6,6];
Xdot.dX_location = Gator1Data.Index4;
% Deriv 1 Line: Xdot.dX_location = Gator1Data.Index4;
end
function xdot = ADiGator_state_derivative_1(t,x,u,w)
global ADiGator_ft_1_XX_ADiGatorJac
Gator1Data = ADiGator_ft_1_XX_ADiGatorJac.ADiGator_state_derivative_1.Gator1Data;
Gator2Data = ADiGator_ft_1_XX_ADiGatorJac.ADiGator_state_derivative_1.Gator2Data;
% ADiGator Start Derivative Computations
%User Line: % function that computes the state derivative
global auxdata 
% Deriv 1 Line: global
%User Line: global
%User Line: % assemble state
rbar.dX = x.dX(1);
% Deriv 1 Line: rbar.dX = x.dX(1);
rbar.f = x.f(1);
% Deriv 1 Line: rbar.f = x.f(1);
%User Line: rbar = x(1);
tbar.dX = x.dX(2);
% Deriv 1 Line: tbar.dX = x.dX(2);
tbar.f = x.f(2);
% Deriv 1 Line: tbar.f = x.f(2);
%User Line: tbar = x(2);
ubar.dX = x.dX(3);
% Deriv 1 Line: ubar.dX = x.dX(3);
ubar.f = x.f(3);
% Deriv 1 Line: ubar.f = x.f(3);
%User Line: ubar = x(3);
vbar.dX = x.dX(4);
% Deriv 1 Line: vbar.dX = x.dX(4);
vbar.f = x.f(4);
% Deriv 1 Line: vbar.f = x.f(4);
%User Line: vbar = x(4);
theta.f = t*auxdata.thetaf;
% Deriv 1 Line: theta.f = t*auxdata.thetaf;
%User Line: theta = t * auxdata.thetaf;
%User Line: % define rotation matrices
trueRAAN.f = 180 - auxdata.Omg;
% Deriv 1 Line: trueRAAN.f = 180 - auxdata.Omg;
%User Line: trueRAAN = 180 - auxdata.Omg;
cadainput10_1.f = trueRAAN.f;
% Deriv 1 Line: cadainput10_1.f = trueRAAN.f;
%User Line: cadainput10_1 = trueRAAN;
cadainput10_1.dX = 0;
% Deriv 1 Line: cadainput10_1.dX = zeros(1,1);
cadaoutput10_1 = ADiGator_rotate_z_deg(cadainput10_1);
% Call to function: ADiGator_rotate_z_deg
cadaoutput10_1 = rmfield(cadaoutput10_1,'dXdX');
% Call to function: rotate_z_deg
cadaoutput10_1 = rmfield(cadaoutput10_1,'dX');
% Deriv 1 Line: cadaoutput10_1 = rmfield(cadaoutput10_1,'dX');
R_Omg.f = cadaoutput10_1.f;
% Deriv 1 Line: R_Omg.f = cadaoutput10_1.f;
%User Line: R_Omg = cadaoutput10_1;
cadainput8_1 = auxdata.inc;
% Deriv 1 Line: cadainput8_1 = auxdata.inc;
%User Line: cadainput8_1 = auxdata.inc;
cadaoutput8_1 = ADiGator_rotate_x_deg(cadainput8_1);
% Call to function: ADiGator_rotate_x_deg
% Call to function: rotate_x_deg
R_inc.f = cadaoutput8_1.f;
% Deriv 1 Line: R_inc.f = cadaoutput8_1.f;
%User Line: R_inc = cadaoutput8_1;
cadainput9_1.f = theta.f;
% Deriv 1 Line: cadainput9_1.f = theta.f;
%User Line: cadainput9_1 = theta;
cadaoutput9_1 = ADiGator_rotate_z(cadainput9_1);
% Call to function: ADiGator_rotate_z
% Call to function: rotate_z
R_CRK_to_RSW.f = cadaoutput9_1.f;
% Deriv 1 Line: R_CRK_to_RSW.f = cadaoutput9_1.f;
%User Line: R_CRK_to_RSW = cadaoutput9_1;
R_CRK_to_IJK.f = R_Omg.f*R_inc.f;
% Deriv 1 Line: R_CRK_to_IJK.f = R_Omg.f*R_inc.f;
%User Line: R_CRK_to_IJK = R_Omg * R_inc;
cada1f1 = R_CRK_to_RSW.f.';
% Deriv 1 Line: cada1f1 = R_CRK_to_RSW.f.';
R_RSW_to_IJK.f = R_CRK_to_IJK.f*cada1f1;
% Deriv 1 Line: R_RSW_to_IJK.f = R_CRK_to_IJK.f*cada1f1;
%User Line: R_RSW_to_IJK = R_CRK_to_IJK * R_CRK_to_RSW';
cada1f1dX = auxdata.T0*tbar.dX;
% Deriv 1 Line: cada1f1dX = auxdata.T0.*tbar.dX;
cada1f1 = tbar.f*auxdata.T0;
% Deriv 1 Line: cada1f1 = tbar.f*auxdata.T0;
tDays.dX = cada1f1dX/86400;
% Deriv 1 Line: tDays.dX = cada1f1dX./86400;
tDays.f = cada1f1/86400;
% Deriv 1 Line: tDays.f = cada1f1/86400;
%User Line: tDays = tbar * auxdata.T0 / 86400;
cadainput10_1.dX = tDays.dX;
% Deriv 1 Line: cadainput10_1.dX = tDays.dX;
cadainput10_1.f = tDays.f;
% Deriv 1 Line: cadainput10_1.f = tDays.f;
%User Line: cadainput10_1 = tDays;
cadaoutput10_1 = ADiGator_rotate_z_deg(cadainput10_1);
% Call to function: ADiGator_rotate_z_deg
% Call to function: rotate_z_deg
R_SLF_to_IJK.dXdX = cadaoutput10_1.dXdX; R_SLF_to_IJK.dX = cadaoutput10_1.dX;
% Deriv 1 Line: R_SLF_to_IJK.dX = cadaoutput10_1.dX;
R_SLF_to_IJK.f = cadaoutput10_1.f;
% Deriv 1 Line: R_SLF_to_IJK.f = cadaoutput10_1.f;
%User Line: R_SLF_to_IJK = cadaoutput10_1;
%User Line: % define unit vectors
i.f = [1;0;0];
% Deriv 1 Line: i.f =  [1; 0; 0];
%User Line: i = [1; 0; 0];
j.f = [0;1;0];
% Deriv 1 Line: j.f =  [0; 1; 0];
%User Line: j = [0; 1; 0];
k.f = [0;0;1];
% Deriv 1 Line: k.f =  [0; 0; 1];
%User Line: k = [0; 0; 1];
cada1td1 =  zeros(3,2);
% Deriv 1 Line: cada1td1 = zeros(3,2);
cada1td1dX = R_SLF_to_IJK.dXdX(Gator2Data.Index1);
cada1td1(Gator1Data.Index1) = R_SLF_to_IJK.dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index1) = R_SLF_to_IJK.dX;
cada2f1 = i.f.';
cada2td1 = zeros(3,2);
cada2td1(Gator2Data.Index2) = cada1td1dX;
cada2td1 = cada2f1*cada2td1;
cada2td1 = cada2td1(:);
cada1td1dX = cada2td1(Gator2Data.Index3);
cada1td1 = cada2f1*cada1td1;
% Deriv 1 Line: cada1td1 = i.f.'*cada1td1;
cada1td1 = cada1td1(:);
% Deriv 1 Line: cada1td1 = cada1td1(:);
r_SS.dXdX = cada1td1dX(Gator2Data.Index4);
r_SS.dX = cada1td1(Gator1Data.Index2);
% Deriv 1 Line: r_SS.dX = cada1td1(Gator1Data.Index2);
r_SS.f = R_SLF_to_IJK.f*i.f;
% Deriv 1 Line: r_SS.f = R_SLF_to_IJK.f*i.f;
%User Line: r_SS = R_SLF_to_IJK * i;
%User Line: % define primer yaw vector
yaw.dX = u.dX;
% Deriv 1 Line: yaw.dX = u.dX;
yaw.f = u.f;
% Deriv 1 Line: yaw.f = u.f;
%User Line: yaw = u;
%User Line: % assemble primer vector in local frame
cada2f1dX = -sin(yaw.f).*yaw.dX;
cada2f1 = cos(yaw.f);
cada1f1dXdX = yaw.dX.*cada2f1dX;
cada1f1dX = cada2f1*yaw.dX;
% Deriv 1 Line: cada1f1dX = cos(yaw.f).*yaw.dX;
cada1f1 = sin(yaw.f);
% Deriv 1 Line: cada1f1 = sin(yaw.f);
cada2f1dX = cos(yaw.f).*yaw.dX;
cada2f1 = sin(yaw.f);
cada2f2dX = -cada2f1dX;
cada2f2 = uminus(cada2f1);
cada1f2dXdX = yaw.dX.*cada2f2dX;
cada1f2dX = cada2f2*yaw.dX;
% Deriv 1 Line: cada1f2dX = -sin(yaw.f).*yaw.dX;
cada1f2 = cos(yaw.f);
% Deriv 1 Line: cada1f2 = cos(yaw.f);
cada1td1 =  zeros(2,1);
% Deriv 1 Line: cada1td1 = zeros(2,1);
cada1td1dX = cada1f1dXdX;
cada1td1(1) = cada1f1dX;
% Deriv 1 Line: cada1td1(1) = cada1f1dX;
cada2td1 = zeros(2,1);
cada2td1(2) = cada1f2dXdX;
cada2td1(1) = cada1td1dX(1);
cada1td1dX = cada2td1;
cada1td1(2) = cada1f2dX;
% Deriv 1 Line: cada1td1(2) = cada1f2dX;
p_RSW.dXdX = cada1td1dX; p_RSW.dX = cada1td1;
% Deriv 1 Line: p_RSW.dX = cada1td1;
p_RSW.f = [cada1f1;cada1f2;0];
% Deriv 1 Line: p_RSW.f = [cada1f1;cada1f2;0];
%User Line: p_RSW = [sin(yaw); cos(yaw); 0];
%User Line: % rotate primer vector to inertial
cada1td1 =  zeros(3,1);
% Deriv 1 Line: cada1td1 = zeros(3,1);
cada1td1dX = p_RSW.dXdX;
cada1td1(Gator1Data.Index3) = p_RSW.dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index3) = p_RSW.dX;
cada2td1 = zeros(3,1);
cada2td1(Gator2Data.Index5) = cada1td1dX;
cada2td1 = R_RSW_to_IJK.f*cada2td1;
cada2td1 = cada2td1(:);
cada1td1dX = cada2td1(Gator2Data.Index6);
cada1td1 = R_RSW_to_IJK.f*cada1td1;
% Deriv 1 Line: cada1td1 = R_RSW_to_IJK.f*cada1td1;
cada1td1 = cada1td1(:);
% Deriv 1 Line: cada1td1 = cada1td1(:);
p_IJK.dXdX = cada1td1dX(Gator2Data.Index7);
p_IJK.dX = cada1td1(Gator1Data.Index4);
% Deriv 1 Line: p_IJK.dX = cada1td1(Gator1Data.Index4);
p_IJK.f = R_RSW_to_IJK.f*p_RSW.f;
% Deriv 1 Line: p_IJK.f = R_RSW_to_IJK.f*p_RSW.f;
%User Line: p_IJK = R_RSW_to_IJK * p_RSW;
%User Line: % compute angle between primer vector and sun line
cadainput3_1.dXdX = p_IJK.dXdX; cadainput3_1.dX = p_IJK.dX;
% Deriv 1 Line: cadainput3_1.dX = p_IJK.dX;
cadainput3_1.f = p_IJK.f;
% Deriv 1 Line: cadainput3_1.f = p_IJK.f;
%User Line: cadainput3_1 = p_IJK;
cadainput3_2.dXdX = r_SS.dXdX; cadainput3_2.dX = r_SS.dX;
% Deriv 1 Line: cadainput3_2.dX = r_SS.dX;
cadainput3_2.f = r_SS.f;
% Deriv 1 Line: cadainput3_2.f = r_SS.f;
%User Line: cadainput3_2 = r_SS;
cadainput4_1 = cadainput3_1;
% Deriv 1 Line: cadainput4_1 = cadainput3_1;
cadainput4_2 = cadainput3_2;
% Deriv 1 Line: cadainput4_2 = cadainput3_2;
cadaoutput4_1 = ADiGator_angleBetweenVectors(cadainput4_1,cadainput4_2);
% Call to function: ADiGator_angleBetweenVectors
cadaoutput3_1 = cadaoutput4_1;
% Deriv 1 Line: cadaoutput3_1 = cadaoutput4_1;
% Call to function: angleBetweenVectors
psi.dXdX = cadaoutput3_1.dXdX; psi.dX = cadaoutput3_1.dX;
% Deriv 1 Line: psi.dX = cadaoutput3_1.dX;
psi.f = cadaoutput3_1.f;
% Deriv 1 Line: psi.f = cadaoutput3_1.f;
%User Line: psi = cadaoutput3_1;
%User Line: % compute optimal alpha angle from psi
cada2f1dX = -sin(psi.f).*psi.dX;
cada2f1 = cos(psi.f);
cada2tempdX = cada2f1dX(Gator2Data.Index8);
cada2tf1 = psi.dX(Gator2Data.Index9);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1 = cada2td1 + cada2f1.*psi.dXdX;
cada1f1dXdX = cada2td1;
cada1f1dX = cada2f1*psi.dX;
% Deriv 1 Line: cada1f1dX = cos(psi.f).*psi.dX;
cada1f1 = sin(psi.f);
% Deriv 1 Line: cada1f1 = sin(psi.f);
cada1f2dXdX = cada1f1dXdX./3;
cada1f2dX = cada1f1dX/3;
% Deriv 1 Line: cada1f2dX = cada1f1dX./3;
cada1f2 = cada1f1/3;
% Deriv 1 Line: cada1f2 = cada1f1/3;
cada2f1dX = 2.*cada1f2.^(2-1).*cada1f2dX;
cada2f1 = cada1f2^2;
cada2f2dX = -cada2f1dX;
cada2f2 = 1 - cada2f1;
cada2f3dX = (1/2)./sqrt(cada2f2).*cada2f2dX;
cada2f3dX(cada2f2 == 0 & cada2f2dX == 0) = 0;
cada2f3 = sqrt(cada2f2);
cada2f4dX = -1./cada2f3.^2.*cada2f3dX;
cada2f4 = 1/cada2f3;
cada2tempdX = cada2f4dX(Gator2Data.Index10);
cada2tf1 = cada1f2dX(Gator2Data.Index11);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1 = cada2td1 + cada2f4.*cada1f2dXdX;
cada1f3dXdX = cada2td1;
cada1f3dX = cada2f4*cada1f2dX;
% Deriv 1 Line: cada1f3dX = 1./sqrt(1-cada1f2.^2).*cada1f2dX;
cada1f3 = asin(cada1f2);
% Deriv 1 Line: cada1f3 = asin(cada1f2);
cada1td1dX = psi.dXdX; cada1td1 = psi.dX;
% Deriv 1 Line: cada1td1 = psi.dX;
cada2f1dX = -cada1f3dXdX;
cada2f1 = uminus(cada1f3dX);
cada2td1 = cada1td1dX;
cada2td1 = cada2td1 + cada2f1dX;
cada1td1dX = cada2td1;
cada1td1 = cada1td1 + cada2f1;
% Deriv 1 Line: cada1td1 = cada1td1 + -cada1f3dX;
cada1f4dXdX = cada1td1dX; cada1f4dX = cada1td1;
% Deriv 1 Line: cada1f4dX = cada1td1;
cada1f4 = psi.f - cada1f3;
% Deriv 1 Line: cada1f4 = psi.f - cada1f3;
alpha.dXdX = 0.5.*cada1f4dXdX;
alpha.dX = 0.5*cada1f4dX;
% Deriv 1 Line: alpha.dX = 0.5.*cada1f4dX;
alpha.f = 0.5*cada1f4;
% Deriv 1 Line: alpha.f = 0.5*cada1f4;
%User Line: alpha = 1/2*(psi - asin(sin(psi)/3));
%User Line: % compute the clock angle as the angle between the primer vector and the
%User Line: % chosen reference direction z (valid since it is perpendicular to the
%User Line: % Sun-line)
cada1f1dXdX = p_IJK.dXdX(2);
cada1f1dX = p_IJK.dX(2);
% Deriv 1 Line: cada1f1dX = p_IJK.dX(2);
cada1f1 = p_IJK.f(2);
% Deriv 1 Line: cada1f1 = p_IJK.f(2);
cada1f2dXdX = p_IJK.dXdX(3);
cada1f2dX = p_IJK.dX(3);
% Deriv 1 Line: cada1f2dX = p_IJK.dX(3);
cada1f2 = p_IJK.f(3);
% Deriv 1 Line: cada1f2 = p_IJK.f(3);
cada2f1dX = 2.*cada1f2.^(2-1).*cada1f2dX;
cada2f1 = cada1f2^2;
cada2f2dX = 2.*cada1f1.^(2-1).*cada1f1dX;
cada2f2 = cada1f1^2;
cada2td1 = cada2f1dX;
cada2td1 = cada2td1 + cada2f2dX;
cada2f3dX = cada2td1;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = cada1f2dX./cada2f3;
cada2td1 = cada2td1 + -cada1f2./cada2f3.^2.*cada2f3dX;
cada2f4dX = cada2td1;
cada2f4 = cada1f2/cada2f3;
cada2td1 = cada1f1dX.*cada2f4dX;
cada2td1 = cada2td1 + cada2f4.*cada1f1dXdX;
cada1td1dX = cada2td1;
cada1td1 = cada2f4*cada1f1dX;
% Deriv 1 Line: cada1td1 = cada1f2./(cada1f2.^2+cada1f1.^2).*cada1f1dX;
cada2f1dX = -cada1f1dX;
cada2f1 = uminus(cada1f1);
cada2f2dX = 2.*cada1f2.^(2-1).*cada1f2dX;
cada2f2 = cada1f2^2;
cada2f3dX = 2.*cada1f1.^(2-1).*cada1f1dX;
cada2f3 = cada1f1^2;
cada2td1 = cada2f2dX;
cada2td1 = cada2td1 + cada2f3dX;
cada2f4dX = cada2td1;
cada2f4 = cada2f2 + cada2f3;
cada2td1 = cada2f1dX./cada2f4;
cada2td1 = cada2td1 + -cada2f1./cada2f4.^2.*cada2f4dX;
cada2f5dX = cada2td1;
cada2f5 = cada2f1/cada2f4;
cada2td1 = cada1f2dX.*cada2f5dX;
cada2td1 = cada2td1 + cada2f5.*cada1f2dXdX;
cada2f6dX = cada2td1;
cada2f6 = cada2f5*cada1f2dX;
cada2td1 = cada1td1dX;
cada2td1 = cada2td1 + cada2f6dX;
cada1td1dX = cada2td1;
cada1td1 = cada1td1 + cada2f6;
% Deriv 1 Line: cada1td1 = cada1td1 + -cada1f1./(cada1f2.^2+cada1f1.^2).*cada1f2dX;
delta.dXdX = cada1td1dX; delta.dX = cada1td1;
% Deriv 1 Line: delta.dX = cada1td1;
delta.f = atan2(cada1f1,cada1f2);
% Deriv 1 Line: delta.f = atan2(cada1f1,cada1f2);
%User Line: delta = atan2(p_IJK(2), p_IJK(3));
%User Line: % compute the solar sail acceleration in SunLight-frame
cada2f1dX = cos(alpha.f).*alpha.dX;
cada2f1 = sin(alpha.f);
cada2f2dX = -cada2f1dX;
cada2f2 = uminus(cada2f1);
cada2tempdX = cada2f2dX(Gator2Data.Index12);
cada2tf1 = alpha.dX(Gator2Data.Index13);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1 = cada2td1 + cada2f2.*alpha.dXdX;
cada1f1dXdX = cada2td1;
cada1f1dX = cada2f2*alpha.dX;
% Deriv 1 Line: cada1f1dX = -sin(alpha.f).*alpha.dX;
cada1f1 = cos(alpha.f);
% Deriv 1 Line: cada1f1 = cos(alpha.f);
cada2f1dX = 1.*cada1f1.^(1-1).*cada1f1dX;
cada2f1 = cada1f1^1;
cada2f2dX = 2.*cada2f1dX;
cada2f2 = 2*cada2f1;
cada2tempdX = cada2f2dX(Gator2Data.Index14);
cada2tf1 = cada1f1dX(Gator2Data.Index15);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1 = cada2td1 + cada2f2.*cada1f1dXdX;
cada1f2dXdX = cada2td1;
cada1f2dX = cada2f2*cada1f1dX;
% Deriv 1 Line: cada1f2dX = 2.*cada1f1.^(2-1).*cada1f1dX;
cada1f2 = cada1f1^2;
% Deriv 1 Line: cada1f2 = cada1f1^2;
aMod.dXdX = auxdata.a0bar.*cada1f2dXdX;
aMod.dX = auxdata.a0bar*cada1f2dX;
% Deriv 1 Line: aMod.dX = auxdata.a0bar.*cada1f2dX;
aMod.f = auxdata.a0bar*cada1f2;
% Deriv 1 Line: aMod.f = auxdata.a0bar*cada1f2;
%User Line: aMod = auxdata.a0bar * cos(alpha)^2;
cada2f1dX = cos(alpha.f).*alpha.dX;
cada2f1 = sin(alpha.f);
cada2f2dX = -cada2f1dX;
cada2f2 = uminus(cada2f1);
cada2tempdX = cada2f2dX(Gator2Data.Index16);
cada2tf1 = alpha.dX(Gator2Data.Index17);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1 = cada2td1 + cada2f2.*alpha.dXdX;
cada1f1dXdX = cada2td1;
cada1f1dX = cada2f2*alpha.dX;
% Deriv 1 Line: cada1f1dX = -sin(alpha.f).*alpha.dX;
cada1f1 = cos(alpha.f);
% Deriv 1 Line: cada1f1 = cos(alpha.f);
cada2tempdX = cada1f1dX(Gator2Data.Index18);
cada2tf1 = aMod.dX(Gator2Data.Index19);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1 = cada2td1 + cada1f1.*aMod.dXdX;
cada1td1dX = cada2td1;
cada1td1 = cada1f1*aMod.dX;
% Deriv 1 Line: cada1td1 = cada1f1.*aMod.dX;
cada2tempdX = aMod.dX(Gator2Data.Index20);
cada2tf1 = cada1f1dX(Gator2Data.Index21);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1 = cada2td1 + aMod.f.*cada1f1dXdX;
cada2f1dX = cada2td1;
cada2f1 = aMod.f*cada1f1dX;
cada2td1 = cada1td1dX;
cada2td1 = cada2td1 + cada2f1dX;
cada1td1dX = cada2td1;
cada1td1 = cada1td1 + cada2f1;
% Deriv 1 Line: cada1td1 = cada1td1 + aMod.f.*cada1f1dX;
cada1f2dXdX = cada1td1dX; cada1f2dX = cada1td1;
% Deriv 1 Line: cada1f2dX = cada1td1;
cada1f2 = aMod.f*cada1f1;
% Deriv 1 Line: cada1f2 = aMod.f*cada1f1;
cada1tempdXdX = cada1f2dXdX(Gator2Data.Index22);
cada1tempdX = cada1f2dX(Gator1Data.Index5);
% Deriv 1 Line: cada1tempdX = cada1f2dX(Gator1Data.Index5);
cada1tf1 = i.f(Gator1Data.Index7);
% Deriv 1 Line: cada1tf1 = i.f(Gator1Data.Index7);
cada2f1 = cada1tf1(:);
cada2f2dX = cada1tempdXdX(Gator2Data.Index23);
cada2f2 = cada1tempdX(Gator1Data.Index6);
cada2tf1 = cada2f1(Gator2Data.Index24);
cada1f3dXdX = cada2tf1(:).*cada2f2dX;
cada1f3dX = cada2f1.*cada2f2;
% Deriv 1 Line: cada1f3dX = cada1tf1(:).*cada1tempdX(Gator1Data.Index6);
cada1f3 = cada1f2*i.f;
% Deriv 1 Line: cada1f3 = cada1f2*i.f;
cada2f1dX = -sin(alpha.f).*alpha.dX;
cada2f1 = cos(alpha.f);
cada2tempdX = cada2f1dX(Gator2Data.Index25);
cada2tf1 = alpha.dX(Gator2Data.Index26);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1 = cada2td1 + cada2f1.*alpha.dXdX;
cada1f4dXdX = cada2td1;
cada1f4dX = cada2f1*alpha.dX;
% Deriv 1 Line: cada1f4dX = cos(alpha.f).*alpha.dX;
cada1f4 = sin(alpha.f);
% Deriv 1 Line: cada1f4 = sin(alpha.f);
cada2tempdX = cada1f4dX(Gator2Data.Index27);
cada2tf1 = aMod.dX(Gator2Data.Index28);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1 = cada2td1 + cada1f4.*aMod.dXdX;
cada1td1dX = cada2td1;
cada1td1 = cada1f4*aMod.dX;
% Deriv 1 Line: cada1td1 = cada1f4.*aMod.dX;
cada2tempdX = aMod.dX(Gator2Data.Index29);
cada2tf1 = cada1f4dX(Gator2Data.Index30);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1 = cada2td1 + aMod.f.*cada1f4dXdX;
cada2f1dX = cada2td1;
cada2f1 = aMod.f*cada1f4dX;
cada2td1 = cada1td1dX;
cada2td1 = cada2td1 + cada2f1dX;
cada1td1dX = cada2td1;
cada1td1 = cada1td1 + cada2f1;
% Deriv 1 Line: cada1td1 = cada1td1 + aMod.f.*cada1f4dX;
cada1f5dXdX = cada1td1dX; cada1f5dX = cada1td1;
% Deriv 1 Line: cada1f5dX = cada1td1;
cada1f5 = aMod.f*cada1f4;
% Deriv 1 Line: cada1f5 = aMod.f*cada1f4;
cada2f1dX = -sin(delta.f).*delta.dX;
cada2f1 = cos(delta.f);
cada2td1 = delta.dX.*cada2f1dX;
cada2td1 = cada2td1 + cada2f1.*delta.dXdX;
cada1f6dXdX = cada2td1;
cada1f6dX = cada2f1*delta.dX;
% Deriv 1 Line: cada1f6dX = cos(delta.f).*delta.dX;
cada1f6 = sin(delta.f);
% Deriv 1 Line: cada1f6 = sin(delta.f);
cada2tempdX = cada1f6dX(Gator2Data.Index31);
cada2td1 = zeros(4,1);
cada2td1(Gator2Data.Index32) = cada1f5dX(:).*cada2tempdX;
cada2td1 = cada2td1 + cada1f6.*cada1f5dXdX;
cada1td1dX = cada2td1;
cada1td1 = cada1f6*cada1f5dX;
% Deriv 1 Line: cada1td1 = cada1f6.*cada1f5dX;
cada2f1dX = cada1td1dX(Gator2Data.Index33);
cada2f1 = cada1td1(2);
cada2td1 = cada1f6dX.*cada1f5dX;
cada2td1(2) = cada2td1(2) + cada1f5.*cada1f6dXdX;
cada2f2dX = cada2td1;
cada2f2 = cada1f5*cada1f6dX;
cada2td1 = cada2f1dX;
cada2td1 = cada2td1 + cada2f2dX;
cada2f3dX = cada2td1;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(4,1);
cada2td1(Gator2Data.Index34) = cada2f3dX;
cada2td1(Gator2Data.Index35) = cada1td1dX(Gator2Data.Index36);
cada1td1dX = cada2td1;
cada1td1(2) = cada2f3;
% Deriv 1 Line: cada1td1(2) = cada1td1(2) + cada1f5.*cada1f6dX;
cada1f7dXdX = cada1td1dX; cada1f7dX = cada1td1;
% Deriv 1 Line: cada1f7dX = cada1td1;
cada1f7 = cada1f5*cada1f6;
% Deriv 1 Line: cada1f7 = cada1f5*cada1f6;
cada1tempdXdX = cada1f7dXdX(Gator2Data.Index37);
cada1tempdX = cada1f7dX(Gator1Data.Index8);
% Deriv 1 Line: cada1tempdX = cada1f7dX(Gator1Data.Index8);
cada1tf1 = j.f(Gator1Data.Index10);
% Deriv 1 Line: cada1tf1 = j.f(Gator1Data.Index10);
cada2f1 = cada1tf1(:);
cada2f2dX = cada1tempdXdX(Gator2Data.Index38);
cada2f2 = cada1tempdX(Gator1Data.Index9);
cada2tf1 = cada2f1(Gator2Data.Index39);
cada1f8dXdX = cada2tf1(:).*cada2f2dX;
cada1f8dX = cada2f1.*cada2f2;
% Deriv 1 Line: cada1f8dX = cada1tf1(:).*cada1tempdX(Gator1Data.Index9);
cada1f8 = cada1f7*j.f;
% Deriv 1 Line: cada1f8 = cada1f7*j.f;
cada1td1 =  zeros(4,1);
% Deriv 1 Line: cada1td1 = zeros(4,1);
cada1td1dX = cada1f3dXdX;
cada1td1(Gator1Data.Index11) = cada1f3dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index11) = cada1f3dX;
cada2f1 = cada1td1(Gator1Data.Index12);
cada2f2dX = cada1f8dXdX;
cada2f2 = cada2f1 + cada1f8dX;
cada2td1 = zeros(8,1);
cada2td1(Gator2Data.Index40) = cada2f2dX;
cada2td1(Gator2Data.Index41) = cada1td1dX(Gator2Data.Index42);
cada1td1dX = cada2td1;
cada1td1(Gator1Data.Index12) = cada2f2;
% Deriv 1 Line: cada1td1(Gator1Data.Index12) = cada1td1(Gator1Data.Index12) + cada1f8dX;
cada1f9dXdX = cada1td1dX; cada1f9dX = cada1td1;
% Deriv 1 Line: cada1f9dX = cada1td1;
cada1f9 = cada1f3 + cada1f8;
% Deriv 1 Line: cada1f9 = cada1f3 + cada1f8;
cada2f1dX = -sin(alpha.f).*alpha.dX;
cada2f1 = cos(alpha.f);
cada2tempdX = cada2f1dX(Gator2Data.Index43);
cada2tf1 = alpha.dX(Gator2Data.Index44);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1 = cada2td1 + cada2f1.*alpha.dXdX;
cada1f10dXdX = cada2td1;
cada1f10dX = cada2f1*alpha.dX;
% Deriv 1 Line: cada1f10dX = cos(alpha.f).*alpha.dX;
cada1f10 = sin(alpha.f);
% Deriv 1 Line: cada1f10 = sin(alpha.f);
cada2tempdX = cada1f10dX(Gator2Data.Index45);
cada2tf1 = aMod.dX(Gator2Data.Index46);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1 = cada2td1 + cada1f10.*aMod.dXdX;
cada1td1dX = cada2td1;
cada1td1 = cada1f10*aMod.dX;
% Deriv 1 Line: cada1td1 = cada1f10.*aMod.dX;
cada2tempdX = aMod.dX(Gator2Data.Index47);
cada2tf1 = cada1f10dX(Gator2Data.Index48);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1 = cada2td1 + aMod.f.*cada1f10dXdX;
cada2f1dX = cada2td1;
cada2f1 = aMod.f*cada1f10dX;
cada2td1 = cada1td1dX;
cada2td1 = cada2td1 + cada2f1dX;
cada1td1dX = cada2td1;
cada1td1 = cada1td1 + cada2f1;
% Deriv 1 Line: cada1td1 = cada1td1 + aMod.f.*cada1f10dX;
cada1f11dXdX = cada1td1dX; cada1f11dX = cada1td1;
% Deriv 1 Line: cada1f11dX = cada1td1;
cada1f11 = aMod.f*cada1f10;
% Deriv 1 Line: cada1f11 = aMod.f*cada1f10;
cada2f1dX = cos(delta.f).*delta.dX;
cada2f1 = sin(delta.f);
cada2f2dX = -cada2f1dX;
cada2f2 = uminus(cada2f1);
cada2td1 = delta.dX.*cada2f2dX;
cada2td1 = cada2td1 + cada2f2.*delta.dXdX;
cada1f12dXdX = cada2td1;
cada1f12dX = cada2f2*delta.dX;
% Deriv 1 Line: cada1f12dX = -sin(delta.f).*delta.dX;
cada1f12 = cos(delta.f);
% Deriv 1 Line: cada1f12 = cos(delta.f);
cada2tempdX = cada1f12dX(Gator2Data.Index49);
cada2td1 = zeros(4,1);
cada2td1(Gator2Data.Index50) = cada1f11dX(:).*cada2tempdX;
cada2td1 = cada2td1 + cada1f12.*cada1f11dXdX;
cada1td1dX = cada2td1;
cada1td1 = cada1f12*cada1f11dX;
% Deriv 1 Line: cada1td1 = cada1f12.*cada1f11dX;
cada2f1dX = cada1td1dX(Gator2Data.Index51);
cada2f1 = cada1td1(2);
cada2td1 = cada1f12dX.*cada1f11dX;
cada2td1(2) = cada2td1(2) + cada1f11.*cada1f12dXdX;
cada2f2dX = cada2td1;
cada2f2 = cada1f11*cada1f12dX;
cada2td1 = cada2f1dX;
cada2td1 = cada2td1 + cada2f2dX;
cada2f3dX = cada2td1;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(4,1);
cada2td1(Gator2Data.Index52) = cada2f3dX;
cada2td1(Gator2Data.Index53) = cada1td1dX(Gator2Data.Index54);
cada1td1dX = cada2td1;
cada1td1(2) = cada2f3;
% Deriv 1 Line: cada1td1(2) = cada1td1(2) + cada1f11.*cada1f12dX;
cada1f13dXdX = cada1td1dX; cada1f13dX = cada1td1;
% Deriv 1 Line: cada1f13dX = cada1td1;
cada1f13 = cada1f11*cada1f12;
% Deriv 1 Line: cada1f13 = cada1f11*cada1f12;
cada1tempdXdX = cada1f13dXdX(Gator2Data.Index55);
cada1tempdX = cada1f13dX(Gator1Data.Index13);
% Deriv 1 Line: cada1tempdX = cada1f13dX(Gator1Data.Index13);
cada1tf1 = k.f(Gator1Data.Index15);
% Deriv 1 Line: cada1tf1 = k.f(Gator1Data.Index15);
cada2f1 = cada1tf1(:);
cada2f2dX = cada1tempdXdX(Gator2Data.Index56);
cada2f2 = cada1tempdX(Gator1Data.Index14);
cada2tf1 = cada2f1(Gator2Data.Index57);
cada1f14dXdX = cada2tf1(:).*cada2f2dX;
cada1f14dX = cada2f1.*cada2f2;
% Deriv 1 Line: cada1f14dX = cada1tf1(:).*cada1tempdX(Gator1Data.Index14);
cada1f14 = cada1f13*k.f;
% Deriv 1 Line: cada1f14 = cada1f13*k.f;
cada1td1 =  zeros(6,1);
% Deriv 1 Line: cada1td1 = zeros(6,1);
cada1td1dX = cada1f9dXdX;
cada1td1(Gator1Data.Index16) = cada1f9dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index16) = cada1f9dX;
cada2f1 = cada1td1(Gator1Data.Index17);
cada2f2dX = cada1f14dXdX;
cada2f2 = cada2f1 + cada1f14dX;
cada2td1 = zeros(12,1);
cada2td1(Gator2Data.Index58) = cada2f2dX;
cada2td1(Gator2Data.Index59) = cada1td1dX(Gator2Data.Index60);
cada1td1dX = cada2td1;
cada1td1(Gator1Data.Index17) = cada2f2;
% Deriv 1 Line: cada1td1(Gator1Data.Index17) = cada1td1(Gator1Data.Index17) + cada1f14dX;
a_SLF.dXdX = cada1td1dX; a_SLF.dX = cada1td1;
% Deriv 1 Line: a_SLF.dX = cada1td1;
a_SLF.f = cada1f9 + cada1f14;
% Deriv 1 Line: a_SLF.f = cada1f9 + cada1f14;
%User Line: a_SLF = aMod * cos(alpha) .* i     + aMod * sin(alpha) * sin(delta) * j     + aMod * sin(alpha) * cos(delta) * k;
%User Line: % rotate the sail acceleration to local frame
cada1td2 =  zeros(3,2);
% Deriv 1 Line: cada1td2 = zeros(3,2);
cada1td2dX = R_SLF_to_IJK.dXdX(Gator2Data.Index61);
cada1td2(Gator1Data.Index18) = R_SLF_to_IJK.dX;
% Deriv 1 Line: cada1td2(Gator1Data.Index18) = R_SLF_to_IJK.dX;
cada2f1dX = a_SLF.dX;
cada2f1 = a_SLF.f.';
cada2td2 = zeros(3,2);
cada2td2(Gator2Data.Index62) = cada2f1dX;
cada2td2 = cada1td2.'*cada2td2;
cada2td1 = cada2td2(Gator2Data.Index63);
cada2td1 = cada2td1(:);
cada2td2 = zeros(3,2);
cada2td2(Gator2Data.Index64) = cada1td2dX;
cada2td2 = cada2f1*cada2td2;
cada2td2 = cada2td2(:);
cada2td1(Gator2Data.Index66) = cada2td1(Gator2Data.Index66) + cada2td2(Gator2Data.Index65);
cada1td2dX = cada2td1;
cada1td2 = cada2f1*cada1td2;
% Deriv 1 Line: cada1td2 = a_SLF.f.'*cada1td2;
cada1td1 =  zeros(6,1);
% Deriv 1 Line: cada1td1 = zeros(6,1);
cada2f1dX = cada1td2dX(Gator2Data.Index67);
cada2f1 = cada1td2(Gator1Data.Index19);
cada1td1dX = cada2f1dX;
cada1td1(Gator1Data.Index20) = cada2f1;
% Deriv 1 Line: cada1td1(Gator1Data.Index20) = cada1td2(Gator1Data.Index19);
cada1td2 =  zeros(3,2);
% Deriv 1 Line: cada1td2 = zeros(3,2);
cada1td2dX = a_SLF.dXdX;
cada1td2(Gator1Data.Index21) = a_SLF.dX;
% Deriv 1 Line: cada1td2(Gator1Data.Index21) = a_SLF.dX;
cada2td2 = zeros(3,2);
cada2td2(Gator2Data.Index68) = R_SLF_to_IJK.dX;
cada2td2 = cada1td2.'*cada2td2;
cada2td1 = zeros(12,1);
cada2td1(Gator2Data.Index70) = cada2td2(Gator2Data.Index69);
cada2td2 = zeros(3,4);
cada2td2(Gator2Data.Index71) = cada1td2dX;
cada2td2 = R_SLF_to_IJK.f*cada2td2;
cada2td2 = cada2td2(:);
cada2td1 = cada2td1 + cada2td2(Gator2Data.Index72);
cada1td2dX = cada2td1;
cada1td2 = R_SLF_to_IJK.f*cada1td2;
% Deriv 1 Line: cada1td2 = R_SLF_to_IJK.f*cada1td2;
cada1td2 = cada1td2(:);
% Deriv 1 Line: cada1td2 = cada1td2(:);
cada2f1dX = cada1td2dX(Gator2Data.Index73);
cada2f1 = cada1td2(Gator1Data.Index22);
cada2td1 = zeros(12,1);
cada2td1(Gator2Data.Index74) = cada1td1dX;
cada2td1 = cada2td1 + cada2f1dX;
cada1td1dX = cada2td1;
cada1td1 = cada1td1 + cada2f1;
% Deriv 1 Line: cada1td1 = cada1td1 + cada1td2(Gator1Data.Index22);
a_IJK.dXdX = cada1td1dX; a_IJK.dX = cada1td1;
% Deriv 1 Line: a_IJK.dX = cada1td1;
a_IJK.f = R_SLF_to_IJK.f*a_SLF.f;
% Deriv 1 Line: a_IJK.f = R_SLF_to_IJK.f*a_SLF.f;
%User Line: a_IJK = R_SLF_to_IJK * a_SLF;
cada1f1 = R_RSW_to_IJK.f.';
% Deriv 1 Line: cada1f1 = R_RSW_to_IJK.f.';
cada1td1 =  zeros(3,2);
% Deriv 1 Line: cada1td1 = zeros(3,2);
cada1td1dX = a_IJK.dXdX;
cada1td1(Gator1Data.Index23) = a_IJK.dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index23) = a_IJK.dX;
cada2td1 = zeros(3,4);
cada2td1(Gator2Data.Index75) = cada1td1dX;
cada2td1 = cada1f1*cada2td1;
cada2td1 = cada2td1(:);
cada1td1dX = cada2td1(Gator2Data.Index76);
cada1td1 = cada1f1*cada1td1;
% Deriv 1 Line: cada1td1 = cada1f1*cada1td1;
cada1td1 = cada1td1(:);
% Deriv 1 Line: cada1td1 = cada1td1(:);
a_RSW.dXdX = cada1td1dX(Gator2Data.Index77);
a_RSW.dX = cada1td1(Gator1Data.Index24);
% Deriv 1 Line: a_RSW.dX = cada1td1(Gator1Data.Index24);
a_RSW.f = cada1f1*a_IJK.f;
% Deriv 1 Line: a_RSW.f = cada1f1*a_IJK.f;
%User Line: a_RSW = R_RSW_to_IJK' * a_IJK;
%User Line: % assemble EOMs
eta = auxdata.eta;
% Deriv 1 Line: eta = auxdata.eta;
%User Line: eta = auxdata.eta;
cada1td1 =  zeros(2,1);
% Deriv 1 Line: cada1td1 = zeros(2,1);
cada2f1dX = -vbar.dX./rbar.f.^2.*rbar.dX;
cada2f1 = vbar.dX/rbar.f;
cada1td1dX = cada2f1dX;
cada1td1(2) = cada2f1;
% Deriv 1 Line: cada1td1(2) = vbar.dX./rbar.f;
cada2f1 = cada1td1(1);
cada2f2dX = -vbar.dX;
cada2f2 = uminus(vbar.f);
cada2f3dX = 2.*rbar.f.^(2-1).*rbar.dX;
cada2f3 = rbar.f^2;
cada2td1 = zeros(2,1);
cada2td1(2) = cada2f2dX./cada2f3;
cada2td1(1) = cada2td1(1) + -cada2f2./cada2f3.^2.*cada2f3dX;
cada2f4dX = cada2td1;
cada2f4 = cada2f2/cada2f3;
cada2f5dX = rbar.dX.*cada2f4dX;
cada2f5 = cada2f4*rbar.dX;
cada2f6dX = cada2f5dX;
cada2f6 = cada2f1 + cada2f5;
cada2td1 = zeros(3,1);
cada2td1(Gator2Data.Index78) = cada2f6dX;
cada2td1(2) = cada1td1dX(1);
cada1td1dX = cada2td1;
cada1td1(1) = cada2f6;
% Deriv 1 Line: cada1td1(1) = cada1td1(1) + -vbar.f./rbar.f.^2.*rbar.dX;
cada1f1dXdX = cada1td1dX; cada1f1dX = cada1td1;
% Deriv 1 Line: cada1f1dX = cada1td1;
cada1f1 = vbar.f/rbar.f;
% Deriv 1 Line: cada1f1 = vbar.f/rbar.f;
cada1f2dXdX = eta.*cada1f1dXdX;
cada1f2dX = eta*cada1f1dX;
% Deriv 1 Line: cada1f2dX = eta.*cada1f1dX;
cada1f2 = cada1f1*eta;
% Deriv 1 Line: cada1f2 = cada1f1*eta;
sigma.dXdX = cada1f2dXdX./auxdata.thetaf;
sigma.dX = cada1f2dX/auxdata.thetaf;
% Deriv 1 Line: sigma.dX = cada1f2dX./auxdata.thetaf;
sigma.f = cada1f2/auxdata.thetaf;
% Deriv 1 Line: sigma.f = cada1f2/auxdata.thetaf;
%User Line: sigma = (vbar / rbar) * eta / auxdata.thetaf;
cada1f1dX = eta*ubar.dX;
% Deriv 1 Line: cada1f1dX = eta.*ubar.dX;
cada1f1 = ubar.f*eta;
% Deriv 1 Line: cada1f1 = ubar.f*eta;
cada1td1 =  zeros(3,1);
% Deriv 1 Line: cada1td1 = zeros(3,1);
cada2f1dX = -cada1f1dX./sigma.f.^2.*sigma.dX;
cada2f1 = cada1f1dX/sigma.f;
cada1td1dX = cada2f1dX;
cada1td1(2) = cada2f1;
% Deriv 1 Line: cada1td1(2) = cada1f1dX./sigma.f;
cada2f1 = cada1td1(Gator1Data.Index25);
cada2f2dX = -cada1f1dX;
cada2f2 = uminus(cada1f1);
cada2f3dX = 2.*sigma.f.^(2-1).*sigma.dX;
cada2f3 = sigma.f^2;
cada2td1 = zeros(3,1);
cada2td1(2) = cada2f2dX./cada2f3;
cada2td1(Gator2Data.Index79) = cada2td1(Gator2Data.Index79) + -cada2f2./cada2f3.^2.*cada2f3dX;
cada2f4dX = cada2td1;
cada2f4 = cada2f2/cada2f3;
cada2tempdX = cada2f4dX(Gator2Data.Index80);
cada2tf1 = sigma.dX(Gator2Data.Index81);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1(Gator2Data.Index82) = cada2td1(Gator2Data.Index82) + cada2f4.*sigma.dXdX;
cada2f5dX = cada2td1;
cada2f5 = cada2f4*sigma.dX;
cada2f6dX = cada2f5dX;
cada2f6 = cada2f1 + cada2f5;
cada2td1 = zeros(8,1);
cada2td1(Gator2Data.Index83) = cada2f6dX;
cada2td1(Gator2Data.Index84) = cada1td1dX(Gator2Data.Index85);
cada1td1dX = cada2td1;
cada1td1(Gator1Data.Index25) = cada2f6;
% Deriv 1 Line: cada1td1(Gator1Data.Index25) = cada1td1(Gator1Data.Index25) + -cada1f1./sigma.f.^2.*sigma.dX;
drbar.dXdX = cada1td1dX; drbar.dX = cada1td1;
% Deriv 1 Line: drbar.dX = cada1td1;
drbar.f = cada1f1/sigma.f;
% Deriv 1 Line: drbar.f = cada1f1/sigma.f;
%User Line: drbar = ubar * eta / sigma;
cada2f1dX = 2.*sigma.f.^(2-1).*sigma.dX;
cada2f1 = sigma.f^2;
cada2f2dX = -(-1)./cada2f1.^2.*cada2f1dX;
cada2f2 = (-1)/cada2f1;
cada2tempdX = cada2f2dX(Gator2Data.Index86);
cada2tf1 = sigma.dX(Gator2Data.Index87);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1(Gator2Data.Index88) = cada2td1(Gator2Data.Index88) + cada2f2.*sigma.dXdX;
dtime.dXdX = cada2td1;
dtime.dX = cada2f2*sigma.dX;
% Deriv 1 Line: dtime.dX = -1./sigma.f.^2.*sigma.dX;
dtime.f = 1/sigma.f;
% Deriv 1 Line: dtime.f = 1/sigma.f;
%User Line: dtime = 1 / sigma;
cada2f1dX = 1.*vbar.f.^(1-1).*vbar.dX;
cada2f1 = vbar.f^1;
cada2f2dX = 2.*cada2f1dX;
cada2f2 = 2*cada2f1;
cada1f1dXdX = vbar.dX.*cada2f2dX;
cada1f1dX = cada2f2*vbar.dX;
% Deriv 1 Line: cada1f1dX = 2.*vbar.f.^(2-1).*vbar.dX;
cada1f1 = vbar.f^2;
% Deriv 1 Line: cada1f1 = vbar.f^2;
cada1td1 =  zeros(2,1);
% Deriv 1 Line: cada1td1 = zeros(2,1);
cada2td1 = zeros(2,1);
cada2td1(2) = cada1f1dXdX./rbar.f;
cada2td1(1) = cada2td1(1) + -cada1f1dX./rbar.f.^2.*rbar.dX;
cada2f1dX = cada2td1;
cada2f1 = cada1f1dX/rbar.f;
cada1td1dX = cada2f1dX;
cada1td1(2) = cada2f1;
% Deriv 1 Line: cada1td1(2) = cada1f1dX./rbar.f;
cada2f1 = cada1td1(1);
cada2f2dX = -cada1f1dX;
cada2f2 = uminus(cada1f1);
cada2f3dX = 2.*rbar.f.^(2-1).*rbar.dX;
cada2f3 = rbar.f^2;
cada2td1 = zeros(2,1);
cada2td1(2) = cada2f2dX./cada2f3;
cada2td1(1) = cada2td1(1) + -cada2f2./cada2f3.^2.*cada2f3dX;
cada2f4dX = cada2td1;
cada2f4 = cada2f2/cada2f3;
cada2f5dX = rbar.dX.*cada2f4dX;
cada2f5 = cada2f4*rbar.dX;
cada2f6dX = cada2f5dX;
cada2f6 = cada2f1 + cada2f5;
cada2td1 = zeros(4,1);
cada2td1(Gator2Data.Index89) = cada2f6dX;
cada2td1(Gator2Data.Index90) = cada1td1dX(Gator2Data.Index91);
cada1td1dX = cada2td1;
cada1td1(1) = cada2f6;
% Deriv 1 Line: cada1td1(1) = cada1td1(1) + -cada1f1./rbar.f.^2.*rbar.dX;
cada1f2dXdX = cada1td1dX; cada1f2dX = cada1td1;
% Deriv 1 Line: cada1f2dX = cada1td1;
cada1f2 = cada1f1/rbar.f;
% Deriv 1 Line: cada1f2 = cada1f1/rbar.f;
cada2f1dX = 1.*rbar.f.^(1-1).*rbar.dX;
cada2f1 = rbar.f^1;
cada2f2dX = 2.*cada2f1dX;
cada2f2 = 2*cada2f1;
cada1f3dXdX = rbar.dX.*cada2f2dX;
cada1f3dX = cada2f2*rbar.dX;
% Deriv 1 Line: cada1f3dX = 2.*rbar.f.^(2-1).*rbar.dX;
cada1f3 = rbar.f^2;
% Deriv 1 Line: cada1f3 = rbar.f^2;
cada2f1dX = 2.*cada1f3.^(2-1).*cada1f3dX;
cada2f1 = cada1f3^2;
cada2f2dX = -(-1)./cada2f1.^2.*cada2f1dX;
cada2f2 = (-1)/cada2f1;
cada2td1 = cada1f3dX.*cada2f2dX;
cada2td1 = cada2td1 + cada2f2.*cada1f3dXdX;
cada1f4dXdX = cada2td1;
cada1f4dX = cada2f2*cada1f3dX;
% Deriv 1 Line: cada1f4dX = -1./cada1f3.^2.*cada1f3dX;
cada1f4 = 1/cada1f3;
% Deriv 1 Line: cada1f4 = 1/cada1f3;
cada1td1dX = cada1f2dXdX; cada1td1 = cada1f2dX;
% Deriv 1 Line: cada1td1 = cada1f2dX;
cada2f1dX = cada1td1dX(Gator2Data.Index92);
cada2f1 = cada1td1(1);
cada2f2dX = -cada1f4dXdX;
cada2f2 = uminus(cada1f4dX);
cada2td1 = cada2f1dX;
cada2td1(1) = cada2td1(1) + cada2f2dX;
cada2f3dX = cada2td1;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(4,1);
cada2td1(Gator2Data.Index93) = cada2f3dX;
cada2td1(Gator2Data.Index94) = cada1td1dX(Gator2Data.Index95);
cada1td1dX = cada2td1;
cada1td1(1) = cada2f3;
% Deriv 1 Line: cada1td1(1) = cada1td1(1) + -cada1f4dX;
cada1f5dXdX = cada1td1dX; cada1f5dX = cada1td1;
% Deriv 1 Line: cada1f5dX = cada1td1;
cada1f5 = cada1f2 - cada1f4;
% Deriv 1 Line: cada1f5 = cada1f2 - cada1f4;
cada1f6dXdX = eta.*cada1f5dXdX;
cada1f6dX = eta*cada1f5dX;
% Deriv 1 Line: cada1f6dX = eta.*cada1f5dX;
cada1f6 = cada1f5*eta;
% Deriv 1 Line: cada1f6 = cada1f5*eta;
cada1f7dXdX = a_RSW.dXdX(Gator2Data.Index96);
cada1f7dX = a_RSW.dX(Gator1Data.Index26);
% Deriv 1 Line: cada1f7dX = a_RSW.dX(Gator1Data.Index26);
cada1f7 = a_RSW.f(1);
% Deriv 1 Line: cada1f7 = a_RSW.f(1);
cada1td1 =  zeros(4,1);
% Deriv 1 Line: cada1td1 = zeros(4,1);
cada1td1dX = cada1f6dXdX;
cada1td1(Gator1Data.Index27) = cada1f6dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index27) = cada1f6dX;
cada2f1 = cada1td1(Gator1Data.Index28);
cada2f2dX = cada1f7dXdX;
cada2f2 = cada2f1 + cada1f7dX;
cada2td1 = zeros(8,1);
cada2td1(Gator2Data.Index97) = cada2f2dX;
cada2td1(Gator2Data.Index98) = cada1td1dX(Gator2Data.Index99);
cada1td1dX = cada2td1;
cada1td1(Gator1Data.Index28) = cada2f2;
% Deriv 1 Line: cada1td1(Gator1Data.Index28) = cada1td1(Gator1Data.Index28) + cada1f7dX;
cada1f8dXdX = cada1td1dX; cada1f8dX = cada1td1;
% Deriv 1 Line: cada1f8dX = cada1td1;
cada1f8 = cada1f6 + cada1f7;
% Deriv 1 Line: cada1f8 = cada1f6 + cada1f7;
cada2tempdX = sigma.dX(Gator2Data.Index100);
cada2td1 = zeros(12,1);
cada2td1(Gator2Data.Index101) = cada1f8dXdX./sigma.f;
cada2tf1 = cada1f8dX(Gator2Data.Index102);
cada2td1(Gator2Data.Index103) = cada2td1(Gator2Data.Index103) + -cada2tf1(:)./sigma.f.^2.*cada2tempdX;
cada1td1dX = cada2td1;
cada1td1 = cada1f8dX/sigma.f;
% Deriv 1 Line: cada1td1 = cada1f8dX./sigma.f;
cada2f1dX = cada1td1dX(Gator2Data.Index104);
cada2f1 = cada1td1(Gator1Data.Index29);
cada2f2dX = -cada1f8dX;
cada2f2 = uminus(cada1f8);
cada2f3dX = 2.*sigma.f.^(2-1).*sigma.dX;
cada2f3 = sigma.f^2;
cada2td1 = cada2f2dX./cada2f3;
cada2td1(Gator2Data.Index105) = cada2td1(Gator2Data.Index105) + -cada2f2./cada2f3.^2.*cada2f3dX;
cada2f4dX = cada2td1;
cada2f4 = cada2f2/cada2f3;
cada2tempdX = cada2f4dX(Gator2Data.Index106);
cada2tf1 = sigma.dX(Gator2Data.Index107);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1(Gator2Data.Index108) = cada2td1(Gator2Data.Index108) + cada2f4.*sigma.dXdX;
cada2f5dX = cada2td1;
cada2f5 = cada2f4*sigma.dX;
cada2td1 = zeros(8,1);
cada2td1(Gator2Data.Index109) = cada2f1dX;
cada2td1 = cada2td1 + cada2f5dX;
cada2f6dX = cada2td1;
cada2f6 = cada2f1 + cada2f5;
cada2td1 = zeros(16,1);
cada2td1(Gator2Data.Index110) = cada2f6dX;
cada2td1(Gator2Data.Index111) = cada1td1dX(Gator2Data.Index112);
cada1td1dX = cada2td1;
cada1td1(Gator1Data.Index29) = cada2f6;
% Deriv 1 Line: cada1td1(Gator1Data.Index29) = cada1td1(Gator1Data.Index29) + -cada1f8./sigma.f.^2.*sigma.dX;
dubar.dXdX = cada1td1dX; dubar.dX = cada1td1;
% Deriv 1 Line: dubar.dX = cada1td1;
dubar.f = cada1f8/sigma.f;
% Deriv 1 Line: dubar.f = cada1f8/sigma.f;
%User Line: dubar = ((vbar^2/rbar - 1/rbar^2) * eta + a_RSW(1)) / sigma;
cada1f1dX = uminus(ubar.dX);
% Deriv 1 Line: cada1f1dX = -ubar.dX;
cada1f1 = uminus(ubar.f);
% Deriv 1 Line: cada1f1 = uminus(ubar.f);
cada1td1 =  zeros(2,1);
% Deriv 1 Line: cada1td1 = zeros(2,1);
cada2f1dX = cada1f1dX.*vbar.dX;
cada2f1 = vbar.f*cada1f1dX;
cada1td1dX = cada2f1dX;
cada1td1(1) = cada2f1;
% Deriv 1 Line: cada1td1(1) = vbar.f.*cada1f1dX;
cada2f1 = cada1td1(2);
cada2f2dX = vbar.dX.*cada1f1dX;
cada2f2 = cada1f1*vbar.dX;
cada2f3dX = cada2f2dX;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(2,1);
cada2td1(1) = cada2f3dX;
cada2td1(2) = cada1td1dX(1);
cada1td1dX = cada2td1;
cada1td1(2) = cada2f3;
% Deriv 1 Line: cada1td1(2) = cada1td1(2) + cada1f1.*vbar.dX;
cada1f2dXdX = cada1td1dX; cada1f2dX = cada1td1;
% Deriv 1 Line: cada1f2dX = cada1td1;
cada1f2 = cada1f1*vbar.f;
% Deriv 1 Line: cada1f2 = cada1f1*vbar.f;
cada1td1 =  zeros(3,1);
% Deriv 1 Line: cada1td1 = zeros(3,1);
cada2tempdX = rbar.dX(Gator2Data.Index113);
cada2td1 = zeros(4,1);
cada2td1(Gator2Data.Index114) = cada1f2dXdX./rbar.f;
cada2td1(Gator2Data.Index115) = cada2td1(Gator2Data.Index115) + -cada1f2dX(:)./rbar.f.^2.*cada2tempdX;
cada2f1dX = cada2td1;
cada2f1 = cada1f2dX/rbar.f;
cada1td1dX = cada2f1dX;
cada1td1(Gator1Data.Index30) = cada2f1;
% Deriv 1 Line: cada1td1(Gator1Data.Index30) = cada1f2dX./rbar.f;
cada2f1 = cada1td1(1);
cada2f2dX = -cada1f2dX;
cada2f2 = uminus(cada1f2);
cada2f3dX = 2.*rbar.f.^(2-1).*rbar.dX;
cada2f3 = rbar.f^2;
cada2td1 = zeros(3,1);
cada2td1(Gator2Data.Index116) = cada2f2dX./cada2f3;
cada2td1(1) = cada2td1(1) + -cada2f2./cada2f3.^2.*cada2f3dX;
cada2f4dX = cada2td1;
cada2f4 = cada2f2/cada2f3;
cada2f5dX = rbar.dX.*cada2f4dX;
cada2f5 = cada2f4*rbar.dX;
cada2f6dX = cada2f5dX;
cada2f6 = cada2f1 + cada2f5;
cada2td1 = zeros(7,1);
cada2td1(Gator2Data.Index117) = cada2f6dX;
cada2td1(Gator2Data.Index118) = cada1td1dX(Gator2Data.Index119);
cada1td1dX = cada2td1;
cada1td1(1) = cada2f6;
% Deriv 1 Line: cada1td1(1) = cada1td1(1) + -cada1f2./rbar.f.^2.*rbar.dX;
cada1f3dXdX = cada1td1dX; cada1f3dX = cada1td1;
% Deriv 1 Line: cada1f3dX = cada1td1;
cada1f3 = cada1f2/rbar.f;
% Deriv 1 Line: cada1f3 = cada1f2/rbar.f;
cada1f4dXdX = eta.*cada1f3dXdX;
cada1f4dX = eta*cada1f3dX;
% Deriv 1 Line: cada1f4dX = eta.*cada1f3dX;
cada1f4 = cada1f3*eta;
% Deriv 1 Line: cada1f4 = cada1f3*eta;
cada1f5dXdX = a_RSW.dXdX(Gator2Data.Index120);
cada1f5dX = a_RSW.dX(Gator1Data.Index31);
% Deriv 1 Line: cada1f5dX = a_RSW.dX(Gator1Data.Index31);
cada1f5 = a_RSW.f(2);
% Deriv 1 Line: cada1f5 = a_RSW.f(2);
cada1td1 =  zeros(5,1);
% Deriv 1 Line: cada1td1 = zeros(5,1);
cada1td1dX = cada1f4dXdX;
cada1td1(Gator1Data.Index32) = cada1f4dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index32) = cada1f4dX;
cada2f1 = cada1td1(Gator1Data.Index33);
cada2f2dX = cada1f5dXdX;
cada2f2 = cada2f1 + cada1f5dX;
cada2td1 = zeros(11,1);
cada2td1(Gator2Data.Index121) = cada2f2dX;
cada2td1(Gator2Data.Index122) = cada1td1dX(Gator2Data.Index123);
cada1td1dX = cada2td1;
cada1td1(Gator1Data.Index33) = cada2f2;
% Deriv 1 Line: cada1td1(Gator1Data.Index33) = cada1td1(Gator1Data.Index33) + cada1f5dX;
cada1f6dXdX = cada1td1dX; cada1f6dX = cada1td1;
% Deriv 1 Line: cada1f6dX = cada1td1;
cada1f6 = cada1f4 + cada1f5;
% Deriv 1 Line: cada1f6 = cada1f4 + cada1f5;
cada2tempdX = sigma.dX(Gator2Data.Index124);
cada2td1 = zeros(16,1);
cada2td1(Gator2Data.Index125) = cada1f6dXdX./sigma.f;
cada2tf1 = cada1f6dX(Gator2Data.Index126);
cada2td1(Gator2Data.Index127) = cada2td1(Gator2Data.Index127) + -cada2tf1(:)./sigma.f.^2.*cada2tempdX;
cada1td1dX = cada2td1;
cada1td1 = cada1f6dX/sigma.f;
% Deriv 1 Line: cada1td1 = cada1f6dX./sigma.f;
cada2f1dX = cada1td1dX(Gator2Data.Index128);
cada2f1 = cada1td1(Gator1Data.Index34);
cada2f2dX = -cada1f6dX;
cada2f2 = uminus(cada1f6);
cada2f3dX = 2.*sigma.f.^(2-1).*sigma.dX;
cada2f3 = sigma.f^2;
cada2td1 = cada2f2dX./cada2f3;
cada2td1(Gator2Data.Index129) = cada2td1(Gator2Data.Index129) + -cada2f2./cada2f3.^2.*cada2f3dX;
cada2f4dX = cada2td1;
cada2f4 = cada2f2/cada2f3;
cada2tempdX = cada2f4dX(Gator2Data.Index130);
cada2tf1 = sigma.dX(Gator2Data.Index131);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1(Gator2Data.Index132) = cada2td1(Gator2Data.Index132) + cada2f4.*sigma.dXdX;
cada2f5dX = cada2td1;
cada2f5 = cada2f4*sigma.dX;
cada2td1 = zeros(10,1);
cada2td1(Gator2Data.Index133) = cada2f1dX;
cada2td1 = cada2td1 + cada2f5dX;
cada2f6dX = cada2td1;
cada2f6 = cada2f1 + cada2f5;
cada2td1 = zeros(20,1);
cada2td1(Gator2Data.Index134) = cada2f6dX;
cada2td1(Gator2Data.Index135) = cada1td1dX(Gator2Data.Index136);
cada1td1dX = cada2td1;
cada1td1(Gator1Data.Index34) = cada2f6;
% Deriv 1 Line: cada1td1(Gator1Data.Index34) = cada1td1(Gator1Data.Index34) + -cada1f6./sigma.f.^2.*sigma.dX;
dvbar.dXdX = cada1td1dX; dvbar.dX = cada1td1;
% Deriv 1 Line: dvbar.dX = cada1td1;
dvbar.f = cada1f6/sigma.f;
% Deriv 1 Line: dvbar.f = cada1f6/sigma.f;
%User Line: dvbar = (- ubar * vbar / rbar * eta + a_RSW(2)) / sigma;
cada1td1 =  zeros(14,1);
% Deriv 1 Line: cada1td1 = zeros(14,1);
cada1td1dX = drbar.dXdX;
cada1td1(Gator1Data.Index35) = drbar.dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index35) = drbar.dX;
cada2td1 = zeros(12,1);
cada2td1(Gator2Data.Index137) = dtime.dXdX;
cada2td1(Gator2Data.Index138) = cada1td1dX(Gator2Data.Index139);
cada1td1dX = cada2td1;
cada1td1(Gator1Data.Index36) = dtime.dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index36) = dtime.dX;
cada2td1 = zeros(28,1);
cada2td1(Gator2Data.Index140) = dubar.dXdX;
cada2td1(Gator2Data.Index141) = cada1td1dX(Gator2Data.Index142);
cada1td1dX = cada2td1;
cada1td1(Gator1Data.Index37) = dubar.dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index37) = dubar.dX;
cada2td1 = zeros(48,1);
cada2td1(Gator2Data.Index143) = dvbar.dXdX;
cada2td1(Gator2Data.Index144) = cada1td1dX(Gator2Data.Index145);
cada1td1dX = cada2td1;
cada1td1(Gator1Data.Index38) = dvbar.dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index38) = dvbar.dX;
xdot.dXdX = cada1td1dX; xdot.dX = cada1td1;
% Deriv 1 Line: xdot.dX = cada1td1;
xdot.f = [drbar.f;dtime.f;dubar.f;dvbar.f];
% Deriv 1 Line: xdot.f = [drbar.f;dtime.f;dubar.f;dvbar.f];
%User Line: xdot = [drbar; dtime; dubar; dvbar];
end
function angle = ADiGator_angleBetweenVectors(vec1,vec2)
global ADiGator_ft_1_XX_ADiGatorJac
Gator1Data = ADiGator_ft_1_XX_ADiGatorJac.ADiGator_angleBetweenVectors.Gator1Data;
Gator2Data = ADiGator_ft_1_XX_ADiGatorJac.ADiGator_angleBetweenVectors.Gator2Data;
% ADiGator Start Derivative Computations
cadainput5_1.dXdX = vec1.dXdX; cadainput5_1.dX = vec1.dX;
% Deriv 1 Line: cadainput5_1.dX = vec1.dX;
cadainput5_1.f = vec1.f;
% Deriv 1 Line: cadainput5_1.f = vec1.f;
%User Line: cadainput5_1 = vec1;
cadainput5_2.dXdX = vec2.dXdX; cadainput5_2.dX = vec2.dX;
% Deriv 1 Line: cadainput5_2.dX = vec2.dX;
cadainput5_2.f = vec2.f;
% Deriv 1 Line: cadainput5_2.f = vec2.f;
%User Line: cadainput5_2 = vec2;
cadainput6_1 = cadainput5_1;
% Deriv 1 Line: cadainput6_1 = cadainput5_1;
cadainput6_2 = cadainput5_2;
% Deriv 1 Line: cadainput6_2 = cadainput5_2;
cadaoutput6_1 = ADiGator_myCross(cadainput6_1,cadainput6_2);
% Call to function: ADiGator_myCross
cadaoutput5_1 = cadaoutput6_1;
% Deriv 1 Line: cadaoutput5_1 = cadaoutput6_1;
% Call to function: myCross
c.dXdX = cadaoutput5_1.dXdX; c.dX = cadaoutput5_1.dX;
% Deriv 1 Line: c.dX = cadaoutput5_1.dX;
c.f = cadaoutput5_1.f;
% Deriv 1 Line: c.f = cadaoutput5_1.f;
%User Line: c = cadaoutput5_1;
cadainput4_1.dXdX = c.dXdX; cadainput4_1.dX = c.dX;
% Deriv 1 Line: cadainput4_1.dX = c.dX;
cadainput4_1.f = c.f;
% Deriv 1 Line: cadainput4_1.f = c.f;
%User Line: cadainput4_1 = c;
cadainput5_1 = cadainput4_1;
% Deriv 1 Line: cadainput5_1 = cadainput4_1;
cadaoutput5_1 = ADiGator_myNorm(cadainput5_1);
% Call to function: ADiGator_myNorm
cadaoutput4_1 = cadaoutput5_1;
% Deriv 1 Line: cadaoutput4_1 = cadaoutput5_1;
% Call to function: myNorm
n.dXdX = cadaoutput4_1.dXdX; n.dX = cadaoutput4_1.dX;
% Deriv 1 Line: n.dX = cadaoutput4_1.dX;
n.f = cadaoutput4_1.f;
% Deriv 1 Line: n.f = cadaoutput4_1.f;
%User Line: n = cadaoutput4_1;
cada1f1dXdX = vec1.dXdX; cada1f1dX = vec1.dX;
% Deriv 1 Line: cada1f1dX = vec1.dX;
cada1f1 = vec1.f.';
% Deriv 1 Line: cada1f1 = vec1.f.';
cada1td2 =  zeros(3,1);
% Deriv 1 Line: cada1td2 = zeros(3,1);
cada1td2dX = cada1f1dXdX;
cada1td2(Gator1Data.Index1) = cada1f1dX;
% Deriv 1 Line: cada1td2(Gator1Data.Index1) = cada1f1dX;
cada2f1dX = vec2.dX;
cada2f1 = vec2.f.';
cada2td2 = zeros(3,1);
cada2td2(Gator2Data.Index1) = cada2f1dX;
cada2td2 = cada1td2.'*cada2td2;
cada2td1 = zeros(2,1);
cada2td1(1) = cada2td2(1);
cada2td2 = zeros(3,1);
cada2td2(Gator2Data.Index2) = cada1td2dX;
cada2td2 = cada2f1*cada2td2;
cada2td2 = cada2td2(:);
cada2td1(2) = cada2td1(2) + cada2td2(1);
cada1td2dX = cada2td1;
cada1td2 = cada2f1*cada1td2;
% Deriv 1 Line: cada1td2 = vec2.f.'*cada1td2;
cada1td1 =  zeros(2,1);
% Deriv 1 Line: cada1td1 = zeros(2,1);
cada2f1dX = cada1td2dX(Gator2Data.Index3);
cada2f1 = cada1td2(1);
cada1td1dX = cada2f1dX;
cada1td1(2) = cada2f1;
% Deriv 1 Line: cada1td1(2) = cada1td2(1);
cada1td2 =  zeros(3,1);
% Deriv 1 Line: cada1td2 = zeros(3,1);
cada1td2dX = vec2.dXdX;
cada1td2(Gator1Data.Index2) = vec2.dX;
% Deriv 1 Line: cada1td2(Gator1Data.Index2) = vec2.dX;
cada2td2 = zeros(3,1);
cada2td2(Gator2Data.Index4) = cada1f1dX;
cada2td2 = cada1td2.'*cada2td2;
cada2td1 = zeros(2,1);
cada2td1(2) = cada2td2(1);
cada2td2 = zeros(3,1);
cada2td2(Gator2Data.Index5) = cada1td2dX;
cada2td2 = cada1f1*cada2td2;
cada2td2 = cada2td2(:);
cada2td1(1) = cada2td1(1) + cada2td2(1);
cada1td2dX = cada2td1;
cada1td2 = cada1f1*cada1td2;
% Deriv 1 Line: cada1td2 = cada1f1*cada1td2;
cada1td2 = cada1td2(:);
% Deriv 1 Line: cada1td2 = cada1td2(:);
cada2f1 = cada1td1(1);
cada2f2dX = cada1td2dX(Gator2Data.Index6);
cada2f2 = cada1td2(1);
cada2f3dX = cada2f2dX;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(4,1);
cada2td1(Gator2Data.Index7) = cada2f3dX;
cada2td1(Gator2Data.Index8) = cada1td1dX(Gator2Data.Index9);
cada1td1dX = cada2td1;
cada1td1(1) = cada2f3;
% Deriv 1 Line: cada1td1(1) = cada1td1(1) + cada1td2(1);
d.dXdX = cada1td1dX; d.dX = cada1td1;
% Deriv 1 Line: d.dX = cada1td1;
d.f = cada1f1*vec2.f;
% Deriv 1 Line: d.f = cada1f1*vec2.f;
%User Line: d = vec1' * vec2;
cada2f1dX = 2.*d.f.^(2-1).*d.dX;
cada2f1 = d.f^2;
cada2f2dX = 2.*n.f.^(2-1).*n.dX;
cada2f2 = n.f^2;
cada2td1 = cada2f1dX;
cada2td1 = cada2td1 + cada2f2dX;
cada2f3dX = cada2td1;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = d.dX./cada2f3;
cada2td1 = cada2td1 + -d.f./cada2f3.^2.*cada2f3dX;
cada2f4dX = cada2td1;
cada2f4 = d.f/cada2f3;
cada2tempdX = cada2f4dX(Gator2Data.Index10);
cada2tf1 = n.dX(Gator2Data.Index11);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1 = cada2td1 + cada2f4.*n.dXdX;
cada1td1dX = cada2td1;
cada1td1 = cada2f4*n.dX;
% Deriv 1 Line: cada1td1 = d.f./(d.f.^2+n.f.^2).*n.dX;
cada2f1dX = -n.dX;
cada2f1 = uminus(n.f);
cada2f2dX = 2.*d.f.^(2-1).*d.dX;
cada2f2 = d.f^2;
cada2f3dX = 2.*n.f.^(2-1).*n.dX;
cada2f3 = n.f^2;
cada2td1 = cada2f2dX;
cada2td1 = cada2td1 + cada2f3dX;
cada2f4dX = cada2td1;
cada2f4 = cada2f2 + cada2f3;
cada2td1 = cada2f1dX./cada2f4;
cada2td1 = cada2td1 + -cada2f1./cada2f4.^2.*cada2f4dX;
cada2f5dX = cada2td1;
cada2f5 = cada2f1/cada2f4;
cada2tempdX = cada2f5dX(Gator2Data.Index12);
cada2tf1 = d.dX(Gator2Data.Index13);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1 = cada2td1 + cada2f5.*d.dXdX;
cada2f6dX = cada2td1;
cada2f6 = cada2f5*d.dX;
cada2td1 = cada1td1dX;
cada2td1 = cada2td1 + cada2f6dX;
cada1td1dX = cada2td1;
cada1td1 = cada1td1 + cada2f6;
% Deriv 1 Line: cada1td1 = cada1td1 + -n.f./(d.f.^2+n.f.^2).*d.dX;
angle_tmp.dXdX = cada1td1dX; angle_tmp.dX = cada1td1;
% Deriv 1 Line: angle_tmp.dX = cada1td1;
angle_tmp.f = atan2(n.f,d.f);
% Deriv 1 Line: angle_tmp.f = atan2(n.f,d.f);
%User Line: angle_tmp = atan2(n, d);
cadainput6_1.dXdX = angle_tmp.dXdX; cadainput6_1.dX = angle_tmp.dX;
% Deriv 1 Line: cadainput6_1.dX = angle_tmp.dX;
cadainput6_1.f = angle_tmp.f;
% Deriv 1 Line: cadainput6_1.f = angle_tmp.f;
%User Line: cadainput6_1 = angle_tmp;
cadainput7_1 = cadainput6_1;
% Deriv 1 Line: cadainput7_1 = cadainput6_1;
cadaoutput7_1 = ADiGator_mySign(cadainput7_1);
% Call to function: ADiGator_mySign
cadaoutput6_1 = cadaoutput7_1;
% Deriv 1 Line: cadaoutput6_1 = cadaoutput7_1;
% Call to function: mySign
angSign.f = cadaoutput6_1.f;
% Deriv 1 Line: angSign.f = cadaoutput6_1.f;
%User Line: angSign = cadaoutput6_1;
angle.dXdX = angSign.f.*angle_tmp.dXdX;
angle.dX = angSign.f*angle_tmp.dX;
% Deriv 1 Line: angle.dX = angSign.f.*angle_tmp.dX;
angle.f = angSign.f*angle_tmp.f;
% Deriv 1 Line: angle.f = angSign.f*angle_tmp.f;
%User Line: angle = angSign * angle_tmp;
end
function n = ADiGator_myNorm(vec)
global ADiGator_ft_1_XX_ADiGatorJac
Gator1Data = ADiGator_ft_1_XX_ADiGatorJac.ADiGator_myNorm.Gator1Data;
Gator2Data = ADiGator_ft_1_XX_ADiGatorJac.ADiGator_myNorm.Gator2Data;
% ADiGator Start Derivative Computations
cada1f1dXdX = vec.dXdX(Gator2Data.Index1);
cada1f1dX = vec.dX(Gator1Data.Index1);
% Deriv 1 Line: cada1f1dX = vec.dX(Gator1Data.Index1);
cada1f1 = vec.f(1);
% Deriv 1 Line: cada1f1 = vec.f(1);
cada2f1dX = 1.*cada1f1.^(1-1).*cada1f1dX;
cada2f1 = cada1f1^1;
cada2f2dX = 2.*cada2f1dX;
cada2f2 = 2*cada2f1;
cada2tempdX = cada2f2dX(Gator2Data.Index2);
cada2tf1 = cada1f1dX(Gator2Data.Index3);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1 = cada2td1 + cada2f2.*cada1f1dXdX;
cada1f2dXdX = cada2td1;
cada1f2dX = cada2f2*cada1f1dX;
% Deriv 1 Line: cada1f2dX = 2.*cada1f1.^(2-1).*cada1f1dX;
cada1f2 = cada1f1^2;
% Deriv 1 Line: cada1f2 = cada1f1^2;
cada1f3dXdX = vec.dXdX(Gator2Data.Index4);
cada1f3dX = vec.dX(Gator1Data.Index2);
% Deriv 1 Line: cada1f3dX = vec.dX(Gator1Data.Index2);
cada1f3 = vec.f(2);
% Deriv 1 Line: cada1f3 = vec.f(2);
cada2f1dX = 1.*cada1f3.^(1-1).*cada1f3dX;
cada2f1 = cada1f3^1;
cada2f2dX = 2.*cada2f1dX;
cada2f2 = 2*cada2f1;
cada2tempdX = cada2f2dX(Gator2Data.Index5);
cada2tf1 = cada1f3dX(Gator2Data.Index6);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1 = cada2td1 + cada2f2.*cada1f3dXdX;
cada1f4dXdX = cada2td1;
cada1f4dX = cada2f2*cada1f3dX;
% Deriv 1 Line: cada1f4dX = 2.*cada1f3.^(2-1).*cada1f3dX;
cada1f4 = cada1f3^2;
% Deriv 1 Line: cada1f4 = cada1f3^2;
cada1td1dX = cada1f2dXdX; cada1td1 = cada1f2dX;
% Deriv 1 Line: cada1td1 = cada1f2dX;
cada2td1 = cada1td1dX;
cada2td1 = cada2td1 + cada1f4dXdX;
cada1td1dX = cada2td1;
cada1td1 = cada1td1 + cada1f4dX;
% Deriv 1 Line: cada1td1 = cada1td1 + cada1f4dX;
cada1f5dXdX = cada1td1dX; cada1f5dX = cada1td1;
% Deriv 1 Line: cada1f5dX = cada1td1;
cada1f5 = cada1f2 + cada1f4;
% Deriv 1 Line: cada1f5 = cada1f2 + cada1f4;
cada1f6dXdX = vec.dXdX(Gator2Data.Index7);
cada1f6dX = vec.dX(Gator1Data.Index3);
% Deriv 1 Line: cada1f6dX = vec.dX(Gator1Data.Index3);
cada1f6 = vec.f(3);
% Deriv 1 Line: cada1f6 = vec.f(3);
cada2f1dX = 1.*cada1f6.^(1-1).*cada1f6dX;
cada2f1 = cada1f6^1;
cada2f2dX = 2.*cada2f1dX;
cada2f2 = 2*cada2f1;
cada2tempdX = cada2f2dX(Gator2Data.Index8);
cada2tf1 = cada1f6dX(Gator2Data.Index9);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1 = cada2td1 + cada2f2.*cada1f6dXdX;
cada1f7dXdX = cada2td1;
cada1f7dX = cada2f2*cada1f6dX;
% Deriv 1 Line: cada1f7dX = 2.*cada1f6.^(2-1).*cada1f6dX;
cada1f7 = cada1f6^2;
% Deriv 1 Line: cada1f7 = cada1f6^2;
cada1td1dX = cada1f5dXdX; cada1td1 = cada1f5dX;
% Deriv 1 Line: cada1td1 = cada1f5dX;
cada2td1 = cada1td1dX;
cada2td1 = cada2td1 + cada1f7dXdX;
cada1td1dX = cada2td1;
cada1td1 = cada1td1 + cada1f7dX;
% Deriv 1 Line: cada1td1 = cada1td1 + cada1f7dX;
cada1f8dXdX = cada1td1dX; cada1f8dX = cada1td1;
% Deriv 1 Line: cada1f8dX = cada1td1;
cada1f8 = cada1f5 + cada1f7;
% Deriv 1 Line: cada1f8 = cada1f5 + cada1f7;
cada2f1dX = (1/2)./sqrt(cada1f8).*cada1f8dX;
cada2f1dX(cada1f8 == 0 & cada1f8dX == 0) = 0;
cada2f1 = sqrt(cada1f8);
cada2f2dX = -0.5./cada2f1.^2.*cada2f1dX;
cada2f2 = 0.5/cada2f1;
cada2tempdX = cada2f2dX(Gator2Data.Index10);
cada2tf1 = cada1f8dX(Gator2Data.Index11);
cada2td1 = cada2tf1(:).*cada2tempdX;
cada2td1 = cada2td1 + cada2f2.*cada1f8dXdX;
n.dXdX = cada2td1;
n.dX = cada2f2*cada1f8dX;
% Deriv 1 Line: n.dX = (1/2)./sqrt(cada1f8).*cada1f8dX;
cada2f1 = eq(cada1f8,0);
cada2f2 = eq(cada1f8dX,0);
cada2f3 = and(cada2f1,cada2f2);
cada2td2 = n.dXdX;
cada2tind1 = cada2f3(Gator2Data.Index12);
cada2td2(cada2tind1) = 0;
n.dXdX = cada2td2;
n.dX(cada2f3) = 0;
% Deriv 1 Line: n.dX(cada1f8 == 0 & cada1f8dX == 0) = 0;
n.f = sqrt(cada1f8);
% Deriv 1 Line: n.f = sqrt(cada1f8);
%User Line: n = sqrt(vec(1)^2 + vec(2)^2 + vec(3)^2);
end
function result = ADiGator_myCross(vec1,vec2)
global ADiGator_ft_1_XX_ADiGatorJac
Gator1Data = ADiGator_ft_1_XX_ADiGatorJac.ADiGator_myCross.Gator1Data;
Gator2Data = ADiGator_ft_1_XX_ADiGatorJac.ADiGator_myCross.Gator2Data;
% ADiGator Start Derivative Computations
result.f = [0;0;0];
% Deriv 1 Line: result.f =  zeros(3, 1);
%User Line: result = zeros(3, 1);
cada1f1dXdX = vec1.dXdX(2);
cada1f1dX = vec1.dX(2);
% Deriv 1 Line: cada1f1dX = vec1.dX(2);
cada1f1 = vec1.f(2);
% Deriv 1 Line: cada1f1 = vec1.f(2);
cada1f2 = vec2.f(3);
% Deriv 1 Line: cada1f2 = vec2.f(3);
cada1f3 = cada1f1*cada1f2;
% Deriv 1 Line: cada1f3 = cada1f1*cada1f2;
cada1f4dXdX = vec1.dXdX(3);
cada1f4dX = vec1.dX(3);
% Deriv 1 Line: cada1f4dX = vec1.dX(3);
cada1f4 = vec1.f(3);
% Deriv 1 Line: cada1f4 = vec1.f(3);
cada1f5dXdX = vec2.dXdX(2);
cada1f5dX = vec2.dX(2);
% Deriv 1 Line: cada1f5dX = vec2.dX(2);
cada1f5 = vec2.f(2);
% Deriv 1 Line: cada1f5 = vec2.f(2);
cada1td1 =  zeros(2,1);
% Deriv 1 Line: cada1td1 = zeros(2,1);
cada2td1 = zeros(2,1);
cada2td1(1) = cada1f4dX.*cada1f5dX;
cada2td1(2) = cada2td1(2) + cada1f5.*cada1f4dXdX;
cada2f1dX = cada2td1;
cada2f1 = cada1f5*cada1f4dX;
cada1td1dX = cada2f1dX;
cada1td1(2) = cada2f1;
% Deriv 1 Line: cada1td1(2) = cada1f5.*cada1f4dX;
cada2f1 = cada1td1(1);
cada2td1 = zeros(2,1);
cada2td1(2) = cada1f5dX.*cada1f4dX;
cada2td1(1) = cada2td1(1) + cada1f4.*cada1f5dXdX;
cada2f2dX = cada2td1;
cada2f2 = cada1f4*cada1f5dX;
cada2f3dX = cada2f2dX;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(4,1);
cada2td1(Gator2Data.Index1) = cada2f3dX;
cada2td1(Gator2Data.Index2) = cada1td1dX(Gator2Data.Index3);
cada1td1dX = cada2td1;
cada1td1(1) = cada2f3;
% Deriv 1 Line: cada1td1(1) = cada1td1(1) + cada1f4.*cada1f5dX;
cada1f6dXdX = cada1td1dX; cada1f6dX = cada1td1;
% Deriv 1 Line: cada1f6dX = cada1td1;
cada1f6 = cada1f4*cada1f5;
% Deriv 1 Line: cada1f6 = cada1f4*cada1f5;
cada1f7dXdX = -cada1f6dXdX;
cada1f7dX = uminus(cada1f6dX);
% Deriv 1 Line: cada1f7dX = -cada1f6dX;
cada1f7 = cada1f3 - cada1f6;
% Deriv 1 Line: cada1f7 = cada1f3 - cada1f6;
result.dXdX = cada1f7dXdX; result.dX = cada1f7dX;
% Deriv 1 Line: result.dX = cada1f7dX;
result.f(1,1) = cada1f7;
% Deriv 1 Line: result.f(1,1) = cada1f7;
%User Line: result(1, 1) = vec1(2) * vec2(3) - vec1(3) * vec2(2);
cada1f1dXdX = vec1.dXdX(3);
cada1f1dX = vec1.dX(3);
% Deriv 1 Line: cada1f1dX = vec1.dX(3);
cada1f1 = vec1.f(3);
% Deriv 1 Line: cada1f1 = vec1.f(3);
cada1f2dXdX = vec2.dXdX(1);
cada1f2dX = vec2.dX(1);
% Deriv 1 Line: cada1f2dX = vec2.dX(1);
cada1f2 = vec2.f(1);
% Deriv 1 Line: cada1f2 = vec2.f(1);
cada1td1 =  zeros(2,1);
% Deriv 1 Line: cada1td1 = zeros(2,1);
cada2td1 = zeros(2,1);
cada2td1(1) = cada1f1dX.*cada1f2dX;
cada2td1(2) = cada2td1(2) + cada1f2.*cada1f1dXdX;
cada2f1dX = cada2td1;
cada2f1 = cada1f2*cada1f1dX;
cada1td1dX = cada2f1dX;
cada1td1(2) = cada2f1;
% Deriv 1 Line: cada1td1(2) = cada1f2.*cada1f1dX;
cada2f1 = cada1td1(1);
cada2td1 = zeros(2,1);
cada2td1(2) = cada1f2dX.*cada1f1dX;
cada2td1(1) = cada2td1(1) + cada1f1.*cada1f2dXdX;
cada2f2dX = cada2td1;
cada2f2 = cada1f1*cada1f2dX;
cada2f3dX = cada2f2dX;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(4,1);
cada2td1(Gator2Data.Index4) = cada2f3dX;
cada2td1(Gator2Data.Index5) = cada1td1dX(Gator2Data.Index6);
cada1td1dX = cada2td1;
cada1td1(1) = cada2f3;
% Deriv 1 Line: cada1td1(1) = cada1td1(1) + cada1f1.*cada1f2dX;
cada1f3dXdX = cada1td1dX; cada1f3dX = cada1td1;
% Deriv 1 Line: cada1f3dX = cada1td1;
cada1f3 = cada1f1*cada1f2;
% Deriv 1 Line: cada1f3 = cada1f1*cada1f2;
cada1f4dXdX = vec1.dXdX(1);
cada1f4dX = vec1.dX(1);
% Deriv 1 Line: cada1f4dX = vec1.dX(1);
cada1f4 = vec1.f(1);
% Deriv 1 Line: cada1f4 = vec1.f(1);
cada1f5 = vec2.f(3);
% Deriv 1 Line: cada1f5 = vec2.f(3);
cada1f6 = cada1f4*cada1f5;
% Deriv 1 Line: cada1f6 = cada1f4*cada1f5;
cada1f7dXdX = cada1f3dXdX; cada1f7dX = cada1f3dX;
% Deriv 1 Line: cada1f7dX = cada1f3dX;
cada1f7 = cada1f3 - cada1f6;
% Deriv 1 Line: cada1f7 = cada1f3 - cada1f6;
cada1td1 =  zeros(4,1);
% Deriv 1 Line: cada1td1 = zeros(4,1);
cada1td1dX = cada1f7dXdX;
cada1td1(Gator1Data.Index1) = cada1f7dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index1) = cada1f7dX;
cada2f1dX = result.dXdX(Gator2Data.Index7);
cada2f1 = result.dX(Gator1Data.Index3);
cada2td1 = zeros(8,1);
cada2td1(Gator2Data.Index8) = cada2f1dX;
cada2td1(Gator2Data.Index9) = cada1td1dX(Gator2Data.Index10);
cada1td1dX = cada2td1;
cada1td1(Gator1Data.Index2) = cada2f1;
% Deriv 1 Line: cada1td1(Gator1Data.Index2) = result.dX(Gator1Data.Index3);
result.dXdX = cada1td1dX; result.dX = cada1td1;
% Deriv 1 Line: result.dX = cada1td1;
result.f(2,1) = cada1f7;
% Deriv 1 Line: result.f(2,1) = cada1f7;
%User Line: result(2, 1) = vec1(3) * vec2(1) - vec1(1) * vec2(3);
cada1f1dXdX = vec1.dXdX(1);
cada1f1dX = vec1.dX(1);
% Deriv 1 Line: cada1f1dX = vec1.dX(1);
cada1f1 = vec1.f(1);
% Deriv 1 Line: cada1f1 = vec1.f(1);
cada1f2dXdX = vec2.dXdX(2);
cada1f2dX = vec2.dX(2);
% Deriv 1 Line: cada1f2dX = vec2.dX(2);
cada1f2 = vec2.f(2);
% Deriv 1 Line: cada1f2 = vec2.f(2);
cada1td1 =  zeros(2,1);
% Deriv 1 Line: cada1td1 = zeros(2,1);
cada2td1 = zeros(2,1);
cada2td1(1) = cada1f1dX.*cada1f2dX;
cada2td1(2) = cada2td1(2) + cada1f2.*cada1f1dXdX;
cada2f1dX = cada2td1;
cada2f1 = cada1f2*cada1f1dX;
cada1td1dX = cada2f1dX;
cada1td1(2) = cada2f1;
% Deriv 1 Line: cada1td1(2) = cada1f2.*cada1f1dX;
cada2f1 = cada1td1(1);
cada2td1 = zeros(2,1);
cada2td1(2) = cada1f2dX.*cada1f1dX;
cada2td1(1) = cada2td1(1) + cada1f1.*cada1f2dXdX;
cada2f2dX = cada2td1;
cada2f2 = cada1f1*cada1f2dX;
cada2f3dX = cada2f2dX;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(4,1);
cada2td1(Gator2Data.Index11) = cada2f3dX;
cada2td1(Gator2Data.Index12) = cada1td1dX(Gator2Data.Index13);
cada1td1dX = cada2td1;
cada1td1(1) = cada2f3;
% Deriv 1 Line: cada1td1(1) = cada1td1(1) + cada1f1.*cada1f2dX;
cada1f3dXdX = cada1td1dX; cada1f3dX = cada1td1;
% Deriv 1 Line: cada1f3dX = cada1td1;
cada1f3 = cada1f1*cada1f2;
% Deriv 1 Line: cada1f3 = cada1f1*cada1f2;
cada1f4dXdX = vec1.dXdX(2);
cada1f4dX = vec1.dX(2);
% Deriv 1 Line: cada1f4dX = vec1.dX(2);
cada1f4 = vec1.f(2);
% Deriv 1 Line: cada1f4 = vec1.f(2);
cada1f5dXdX = vec2.dXdX(1);
cada1f5dX = vec2.dX(1);
% Deriv 1 Line: cada1f5dX = vec2.dX(1);
cada1f5 = vec2.f(1);
% Deriv 1 Line: cada1f5 = vec2.f(1);
cada1td1 =  zeros(2,1);
% Deriv 1 Line: cada1td1 = zeros(2,1);
cada2td1 = zeros(2,1);
cada2td1(1) = cada1f4dX.*cada1f5dX;
cada2td1(2) = cada2td1(2) + cada1f5.*cada1f4dXdX;
cada2f1dX = cada2td1;
cada2f1 = cada1f5*cada1f4dX;
cada1td1dX = cada2f1dX;
cada1td1(2) = cada2f1;
% Deriv 1 Line: cada1td1(2) = cada1f5.*cada1f4dX;
cada2f1 = cada1td1(1);
cada2td1 = zeros(2,1);
cada2td1(2) = cada1f5dX.*cada1f4dX;
cada2td1(1) = cada2td1(1) + cada1f4.*cada1f5dXdX;
cada2f2dX = cada2td1;
cada2f2 = cada1f4*cada1f5dX;
cada2f3dX = cada2f2dX;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(4,1);
cada2td1(Gator2Data.Index14) = cada2f3dX;
cada2td1(Gator2Data.Index15) = cada1td1dX(Gator2Data.Index16);
cada1td1dX = cada2td1;
cada1td1(1) = cada2f3;
% Deriv 1 Line: cada1td1(1) = cada1td1(1) + cada1f4.*cada1f5dX;
cada1f6dXdX = cada1td1dX; cada1f6dX = cada1td1;
% Deriv 1 Line: cada1f6dX = cada1td1;
cada1f6 = cada1f4*cada1f5;
% Deriv 1 Line: cada1f6 = cada1f4*cada1f5;
cada1td1dX = cada1f3dXdX; cada1td1 = cada1f3dX;
% Deriv 1 Line: cada1td1 = cada1f3dX;
cada2f1dX = -cada1f6dXdX;
cada2f1 = uminus(cada1f6dX);
cada2td1 = cada1td1dX;
cada2td1 = cada2td1 + cada2f1dX;
cada1td1dX = cada2td1;
cada1td1 = cada1td1 + cada2f1;
% Deriv 1 Line: cada1td1 = cada1td1 + -cada1f6dX;
cada1f7dXdX = cada1td1dX; cada1f7dX = cada1td1;
% Deriv 1 Line: cada1f7dX = cada1td1;
cada1f7 = cada1f3 - cada1f6;
% Deriv 1 Line: cada1f7 = cada1f3 - cada1f6;
cada1td1 =  zeros(6,1);
% Deriv 1 Line: cada1td1 = zeros(6,1);
cada1td1dX = cada1f7dXdX;
cada1td1(Gator1Data.Index4) = cada1f7dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index4) = cada1f7dX;
cada2f1dX = result.dXdX(Gator2Data.Index17);
cada2f1 = result.dX(Gator1Data.Index6);
cada2td1 = zeros(12,1);
cada2td1(Gator2Data.Index18) = cada2f1dX;
cada2td1(Gator2Data.Index19) = cada1td1dX(Gator2Data.Index20);
cada1td1dX = cada2td1;
cada1td1(Gator1Data.Index5) = cada2f1;
% Deriv 1 Line: cada1td1(Gator1Data.Index5) = result.dX(Gator1Data.Index6);
result.dXdX = cada1td1dX; result.dX = cada1td1;
% Deriv 1 Line: result.dX = cada1td1;
result.f(3,1) = cada1f7;
% Deriv 1 Line: result.f(3,1) = cada1f7;
%User Line: result(3, 1) = vec1(1) * vec2(2) - vec1(2) * vec2(1);
end
function s = ADiGator_mySign(num)
global ADiGator_ft_1_XX_ADiGatorJac
Gator1Data = ADiGator_ft_1_XX_ADiGatorJac.ADiGator_mySign.Gator1Data;
Gator2Data = ADiGator_ft_1_XX_ADiGatorJac.ADiGator_mySign.Gator2Data;
% ADiGator Start Derivative Computations
cadaconditional1 = ge(num.f,0);
% Deriv 1 Line: cadaconditional1 = ge(num.f,0);
%User Line: cadaconditional1 = num >= 0;
if cadaconditional1
    s.f = 1;
    % Deriv 1 Line: s.f =  1;
    %User Line: s = 1;
else
    s.f = -1;
    % Deriv 1 Line: s.f =  -1;
    %User Line: s = -1;
end
end
function R = ADiGator_rotate_x_deg(alpha)
global ADiGator_ft_1_XX_ADiGatorJac
Gator1Data = ADiGator_ft_1_XX_ADiGatorJac.ADiGator_rotate_x_deg.Gator1Data;
Gator2Data = ADiGator_ft_1_XX_ADiGatorJac.ADiGator_rotate_x_deg.Gator2Data;
% ADiGator Start Derivative Computations
%User Line: % function to output the rotation matrix for a rotation around the x axis
%User Line: % by angle alpha [deg]
R.f = [0 0 0;0 0 0;0 0 0];
% Deriv 1 Line: R.f =  zeros(3, 3);
%User Line: R = zeros(3, 3);
R.f(1,1) = 1;
% Deriv 1 Line: R.f(1,1) = 1;
%User Line: R(1, 1) = 1;
cada1f1 = cosd(alpha);
% Deriv 1 Line: cada1f1 = cosd(alpha);
R.f(2,2) = cada1f1;
% Deriv 1 Line: R.f(2,2) = cada1f1;
%User Line: R(2, 2) = cosd(alpha);
cada1f1 = sind(alpha);
% Deriv 1 Line: cada1f1 = sind(alpha);
cada1f2 = uminus(cada1f1);
% Deriv 1 Line: cada1f2 = uminus(cada1f1);
R.f(2,3) = cada1f2;
% Deriv 1 Line: R.f(2,3) = cada1f2;
%User Line: R(2, 3) = -sind(alpha);
cada1f1 = sind(alpha);
% Deriv 1 Line: cada1f1 = sind(alpha);
R.f(3,2) = cada1f1;
% Deriv 1 Line: R.f(3,2) = cada1f1;
%User Line: R(3, 2) = sind(alpha);
cada1f1 = cosd(alpha);
% Deriv 1 Line: cada1f1 = cosd(alpha);
R.f(3,3) = cada1f1;
% Deriv 1 Line: R.f(3,3) = cada1f1;
%User Line: R(3, 3) = cosd(alpha);
end
function R = ADiGator_rotate_z(gamma)
global ADiGator_ft_1_XX_ADiGatorJac
Gator1Data = ADiGator_ft_1_XX_ADiGatorJac.ADiGator_rotate_z.Gator1Data;
Gator2Data = ADiGator_ft_1_XX_ADiGatorJac.ADiGator_rotate_z.Gator2Data;
% ADiGator Start Derivative Computations
%User Line: % function to output the rotation matrix for a rotation around the z axis
%User Line: % by angle gamma [rad]
R.f = [0 0 0;0 0 0;0 0 0];
% Deriv 1 Line: R.f =  zeros(3, 3);
%User Line: R = zeros(3, 3);
cada1f1 = cos(gamma.f);
% Deriv 1 Line: cada1f1 = cos(gamma.f);
R.f(1,1) = cada1f1;
% Deriv 1 Line: R.f(1,1) = cada1f1;
%User Line: R(1, 1) = cos(gamma);
cada1f1 = sin(gamma.f);
% Deriv 1 Line: cada1f1 = sin(gamma.f);
cada1f2 = uminus(cada1f1);
% Deriv 1 Line: cada1f2 = uminus(cada1f1);
R.f(1,2) = cada1f2;
% Deriv 1 Line: R.f(1,2) = cada1f2;
%User Line: R(1, 2) = -sin(gamma);
cada1f1 = sin(gamma.f);
% Deriv 1 Line: cada1f1 = sin(gamma.f);
R.f(2,1) = cada1f1;
% Deriv 1 Line: R.f(2,1) = cada1f1;
%User Line: R(2, 1) = sin(gamma);
cada1f1 = cos(gamma.f);
% Deriv 1 Line: cada1f1 = cos(gamma.f);
R.f(2,2) = cada1f1;
% Deriv 1 Line: R.f(2,2) = cada1f1;
%User Line: R(2, 2) = cos(gamma);
R.f(3,3) = 1;
% Deriv 1 Line: R.f(3,3) = 1;
%User Line: R(3, 3) = 1;
end
function R = ADiGator_rotate_z_deg(gamma)
global ADiGator_ft_1_XX_ADiGatorJac
Gator1Data = ADiGator_ft_1_XX_ADiGatorJac.ADiGator_rotate_z_deg.Gator1Data;
Gator2Data = ADiGator_ft_1_XX_ADiGatorJac.ADiGator_rotate_z_deg.Gator2Data;
% ADiGator Start Derivative Computations
%User Line: % function to output the rotation matrix for a rotation around the z axis
%User Line: % by angle gamma [deg]
R.f = [0 0 0;0 0 0;0 0 0];
% Deriv 1 Line: R.f =  zeros(3, 3);
R.dX = [0;0;0;0];
R.dXdX = zeros(4,1);
% Deriv 1 Line: R.dX = zeros(4,1);
%User Line: R = zeros(3, 3);
cada2f1dX = pi/180.*cosd(gamma.f).*gamma.dX;
cada2f1 = sind(gamma.f);
cada2f2dX = (-0.0174532925199433).*cada2f1dX;
cada2f2 = (-0.0174532925199433)*cada2f1;
cada1f1dXdX = gamma.dX.*cada2f2dX;
cada1f1dX = cada2f2*gamma.dX;
% Deriv 1 Line: cada1f1dX = -pi/180.*sind(gamma.f).*gamma.dX;
cada1f1 = cosd(gamma.f);
% Deriv 1 Line: cada1f1 = cosd(gamma.f);
cada2f1 = logical(Gator1Data.Index1);
cada2tempf1 = nonzeros(Gator1Data.Index1);
cada2f2 = zeros(1,1);
cada2f2(1:length(cada2tempf1)) = cada2tempf1;
cada2f3dX = cada1f1dXdX(Gator2Data.Index1);
cada2f3 = cada1f1dX(cada2f2);
R.dXdX(logical(Gator2Data.Index5)) = cada2f3dX(nonzeros(Gator2Data.Index5));
R.dX(cada2f1) = cada2f3;
% Deriv 1 Line: R.dX(logical(Gator1Data.Index1)) = cada1f1dX(nonzeros(Gator1Data.Index1));
R.f(1,1) = cada1f1;
% Deriv 1 Line: R.f(1,1) = cada1f1;
%User Line: R(1, 1) = cosd(gamma);
cada2f1dX = -pi/180.*sind(gamma.f).*gamma.dX;
cada2f1 = cosd(gamma.f);
cada2f2dX = 0.0174532925199433.*cada2f1dX;
cada2f2 = 0.0174532925199433*cada2f1;
cada1f1dXdX = gamma.dX.*cada2f2dX;
cada1f1dX = cada2f2*gamma.dX;
% Deriv 1 Line: cada1f1dX = pi/180.*cosd(gamma.f).*gamma.dX;
cada1f1 = sind(gamma.f);
% Deriv 1 Line: cada1f1 = sind(gamma.f);
cada1f2dXdX = -cada1f1dXdX;
cada1f2dX = uminus(cada1f1dX);
% Deriv 1 Line: cada1f2dX = -cada1f1dX;
cada1f2 = uminus(cada1f1);
% Deriv 1 Line: cada1f2 = uminus(cada1f1);
cada2f1 = logical(Gator1Data.Index2);
cada2tempf1 = nonzeros(Gator1Data.Index2);
cada2f2 = zeros(1,1);
cada2f2(1:length(cada2tempf1)) = cada2tempf1;
cada2f3dX = cada1f2dXdX(Gator2Data.Index2);
cada2f3 = cada1f2dX(cada2f2);
R.dXdX(logical(Gator2Data.Index7)) = cada2f3dX(nonzeros(Gator2Data.Index7));
R.dX(cada2f1) = cada2f3;
% Deriv 1 Line: R.dX(logical(Gator1Data.Index2)) = cada1f2dX(nonzeros(Gator1Data.Index2));
R.f(1,2) = cada1f2;
% Deriv 1 Line: R.f(1,2) = cada1f2;
%User Line: R(1, 2) = -sind(gamma);
cada2f1dX = -pi/180.*sind(gamma.f).*gamma.dX;
cada2f1 = cosd(gamma.f);
cada2f2dX = 0.0174532925199433.*cada2f1dX;
cada2f2 = 0.0174532925199433*cada2f1;
cada1f1dXdX = gamma.dX.*cada2f2dX;
cada1f1dX = cada2f2*gamma.dX;
% Deriv 1 Line: cada1f1dX = pi/180.*cosd(gamma.f).*gamma.dX;
cada1f1 = sind(gamma.f);
% Deriv 1 Line: cada1f1 = sind(gamma.f);
cada2f1 = logical(Gator1Data.Index3);
cada2tempf1 = nonzeros(Gator1Data.Index3);
cada2f2 = zeros(1,1);
cada2f2(1:length(cada2tempf1)) = cada2tempf1;
cada2f3dX = cada1f1dXdX(Gator2Data.Index3);
cada2f3 = cada1f1dX(cada2f2);
R.dXdX(logical(Gator2Data.Index9)) = cada2f3dX(nonzeros(Gator2Data.Index9));
R.dX(cada2f1) = cada2f3;
% Deriv 1 Line: R.dX(logical(Gator1Data.Index3)) = cada1f1dX(nonzeros(Gator1Data.Index3));
R.f(2,1) = cada1f1;
% Deriv 1 Line: R.f(2,1) = cada1f1;
%User Line: R(2, 1) = sind(gamma);
cada2f1dX = pi/180.*cosd(gamma.f).*gamma.dX;
cada2f1 = sind(gamma.f);
cada2f2dX = (-0.0174532925199433).*cada2f1dX;
cada2f2 = (-0.0174532925199433)*cada2f1;
cada1f1dXdX = gamma.dX.*cada2f2dX;
cada1f1dX = cada2f2*gamma.dX;
% Deriv 1 Line: cada1f1dX = -pi/180.*sind(gamma.f).*gamma.dX;
cada1f1 = cosd(gamma.f);
% Deriv 1 Line: cada1f1 = cosd(gamma.f);
cada2f1 = logical(Gator1Data.Index4);
cada2tempf1 = nonzeros(Gator1Data.Index4);
cada2f2 = zeros(1,1);
cada2f2(1:length(cada2tempf1)) = cada2tempf1;
cada2f3dX = cada1f1dXdX(Gator2Data.Index4);
cada2f3 = cada1f1dX(cada2f2);
R.dXdX(logical(Gator2Data.Index11)) = cada2f3dX(nonzeros(Gator2Data.Index11));
R.dX(cada2f1) = cada2f3;
% Deriv 1 Line: R.dX(logical(Gator1Data.Index4)) = cada1f1dX(nonzeros(Gator1Data.Index4));
R.f(2,2) = cada1f1;
% Deriv 1 Line: R.f(2,2) = cada1f1;
%User Line: R(2, 2) = cosd(gamma);
R.f(3,3) = 1;
% Deriv 1 Line: R.f(3,3) = 1;
%User Line: R(3, 3) = 1;
end


function ADiGator_LoadData()
global ADiGator_ft_1_XX_ADiGatorJac
ADiGator_ft_1_XX_ADiGatorJac = load('ft_1_XX_ADiGatorJac.mat');
return
end