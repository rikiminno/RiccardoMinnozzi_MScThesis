function [timeVec, absErr, relErr] = compute_error_metrics(~, solA, solB)
% method that computes the error metric between two solutions generated by
% the same application

% NOTE: the function assumes that the time stamps of each phase array are
% identical

for k = 1:length(solA.t)

    timeVec(k) = solA.t(k);
    xA = solA.x(k, :);
    xB = solB.x(k, :);

    % compute and store the error metrics
    absErr(k) = norm(xA - xB);
    relErr(k) = norm(xA - xB)/norm(xA);

end

% % initialize full stage counter
% stageCount = 1;
% timeVec = [];
%
% % loop over all phases
% M = length(solA);
% for i = 1:M
%
%     % loop over all stages
%     nStages = solA.getPlant().getNumberOfStages();
%     for k = 1:nStages
%
%         % get the current points
%         [~, xA, ~, ~, ~] = solA.getPlant().getPointAtIndex(k);
%         [~, xB, ~, ~, ~] = solB.getPlant().getPointAtIndex(k);
%
%         % compute and store the error metrics
%         absErr(stageCount) = norm(xA - xB);
%         relErr(stageCount) = norm(xA - xB)/norm(xA);
%
%         % increase the full stage counter
%         stageCount = stageCount + 1;
%
%     end
%
%     [t, ~, ~, ~, ~] = solA.getPlant().getFullPlant();
%     timeVec = [timeVec t];
%
% end

