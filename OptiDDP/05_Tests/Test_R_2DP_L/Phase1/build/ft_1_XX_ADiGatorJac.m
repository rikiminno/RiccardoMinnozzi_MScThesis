% This code was generated using ADiGator version 1.4
% Â©2010-2014 Matthew J. Weinstein and Anil V. Rao
% ADiGator may be obtained at https://sourceforge.net/projects/adigator/ 
% Contact: mweinstein@ufl.edu
% Bugs/suggestions may be reported to the sourceforge forums
%                    DISCLAIMER
% ADiGator is a general-purpose software distributed under the GNU General
% Public License version 3.0. While the software is distributed with the
% hope that it will be useful, both the software and generated code are
% provided 'AS IS' with NO WARRANTIES OF ANY KIND and no merchantability
% or fitness for any purpose or application.

function Xdot_X = ft_1_XX_ADiGatorJac(t,X)
global ADiGator_ft_1_XX_ADiGatorJac
if isempty(ADiGator_ft_1_XX_ADiGatorJac); ADiGator_LoadData(); end
Gator1Data = ADiGator_ft_1_XX_ADiGatorJac.ft_1_XX_ADiGatorJac.Gator1Data;
% ADiGator Start Derivative Computations
gator_X.f.dX = X.dX; gator_X.f.f = X.f;
%User Line: gator_X.f = X;
gator_X.dX.f = [1;1;1;1;1;1];
%User Line: gator_X.dX = ones(6,1);
cadainput2_1 = t;
%User Line: cadainput2_1 = t;
cadainput2_2 = gator_X;
cadainput2_2.dX = gator_X.dX.f;
cadainput2_2.f = gator_X.f.f;
%User Line: cadainput2_2 = gator_X;
cadaoutput2_1 = ft_1_X_ADiGatorJac(cadainput2_1,cadainput2_2);
% Call to function: ft_1_X_ADiGatorJac
Xdot = cadaoutput2_1;
%User Line: Xdot = cadaoutput2_1;
Xdot_X.f =  zeros(6,6);
%User Line: Xdot_X = zeros(6,6);
cada1f1 = Xdot.dX_location(:,2);
cada1f2 = cada1f1 - 1;
cada1f3 = cada1f2*6;
cada1f4 = Xdot.dX_location(:,1);
cada1f5 = cada1f3 + cada1f4;
Xdot_X.dX = Xdot.dXdX;
Xdot_X.f(cada1f5) = Xdot.dX;
%User Line: Xdot_X((Xdot.dX_location(:,2)-1)*6+Xdot.dX_location(:,1)) = Xdot.dX;
Xdot_X.dX_size = [6,6,6];
Xdot_X.dX_location = Gator1Data.Index1;
end
function Xdot = ft_1_X_ADiGatorJac(t,X)
global ADiGator_ft_1_XX_ADiGatorJac
Gator1Data = ADiGator_ft_1_XX_ADiGatorJac.ft_1_X_ADiGatorJac.Gator1Data;
Gator2Data = ADiGator_ft_1_XX_ADiGatorJac.ft_1_X_ADiGatorJac.Gator2Data;
% ADiGator Start Derivative Computations
%User Line: % Augmented state derivative wrapper function for phase 1,
%User Line: % automatically generated by the PhaseManager class on 17-Jul-2024 15:45:44
x.dX = X.dX(Gator1Data.Index2);
% Deriv 1 Line: x.dX = X.dX(Gator1Data.Index2);
x.f = X.f(Gator1Data.Index1,1);
% Deriv 1 Line: x.f = X.f(Gator1Data.Index1,1);
%User Line: x = X(1: 4, 1);
u.dX = X.dX(5);
% Deriv 1 Line: u.dX = X.dX(5);
u.f = X.f(5,1);
% Deriv 1 Line: u.f = X.f(5,1);
%User Line: u = X(5: 5, 1);
w.dX = X.dX(6);
% Deriv 1 Line: w.dX = X.dX(6);
w.f = X.f(6,1);
% Deriv 1 Line: w.f = X.f(6,1);
%User Line: w = X(6: 6, 1);
cadainput2_1 = t;
% Deriv 1 Line: cadainput2_1 = t;
%User Line: cadainput2_1 = t;
cadainput2_2.dX = x.dX;
% Deriv 1 Line: cadainput2_2.dX = x.dX;
cadainput2_2.f = x.f;
% Deriv 1 Line: cadainput2_2.f = x.f;
%User Line: cadainput2_2 = x;
cadainput2_3.dX = u.dX;
% Deriv 1 Line: cadainput2_3.dX = u.dX;
cadainput2_3.f = u.f;
% Deriv 1 Line: cadainput2_3.f = u.f;
%User Line: cadainput2_3 = u;
cadainput2_4.dX = w.dX;
% Deriv 1 Line: cadainput2_4.dX = w.dX;
cadainput2_4.f = w.f;
% Deriv 1 Line: cadainput2_4.f = w.f;
%User Line: cadainput2_4 = w;
cadainput3_1 = cadainput2_1;
% Deriv 1 Line: cadainput3_1 = cadainput2_1;
cadainput3_2 = cadainput2_2;
% Deriv 1 Line: cadainput3_2 = cadainput2_2;
cadainput3_3 = cadainput2_3;
% Deriv 1 Line: cadainput3_3 = cadainput2_3;
cadainput3_4 = cadainput2_4;
% Deriv 1 Line: cadainput3_4 = cadainput2_4;
cadaoutput3_1 = ADiGator_state_derivative_11(cadainput3_1,cadainput3_2,cadainput3_3,cadainput3_4);
% Call to function: ADiGator_state_derivative_11
cadaoutput2_1 = cadaoutput3_1;
% Deriv 1 Line: cadaoutput2_1 = cadaoutput3_1;
% Call to function: state_derivative_1
xdot.dXdX = cadaoutput2_1.dXdX; xdot.dX = cadaoutput2_1.dX;
% Deriv 1 Line: xdot.dX = cadaoutput2_1.dX;
xdot.f = cadaoutput2_1.f;
% Deriv 1 Line: xdot.f = cadaoutput2_1.f;
%User Line: xdot = cadaoutput2_1;
udot.f = 0;
% Deriv 1 Line: udot.f =  zeros(1, 1);
%User Line: udot = zeros(1, 1);
wdot.f = 0;
% Deriv 1 Line: wdot.f =  zeros(1, 1);
%User Line: wdot = zeros(1, 1);
cada1td1 =  zeros(10,1);
% Deriv 1 Line: cada1td1 = zeros(10,1);
cada1td1dX = xdot.dXdX;
cada1td1(Gator1Data.Index3) = xdot.dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index3) = xdot.dX;
Xdot.dXdX = cada1td1dX; Xdot.dX = cada1td1;
% Deriv 1 Line: Xdot.dX = cada1td1;
Xdot.f = [xdot.f;udot.f;wdot.f];
% Deriv 1 Line: Xdot.f = [xdot.f;udot.f;wdot.f];
%User Line: Xdot = [xdot; udot; wdot];
Xdot.dX_size = [6 6];
% Deriv 1 Line: Xdot.dX_size = [6,6];
Xdot.dX_location = Gator1Data.Index4;
% Deriv 1 Line: Xdot.dX_location = Gator1Data.Index4;
end
function xdot = ADiGator_state_derivative_11(t,x,u,w)
global ADiGator_ft_1_XX_ADiGatorJac
Gator1Data = ADiGator_ft_1_XX_ADiGatorJac.ADiGator_state_derivative_11.Gator1Data;
Gator2Data = ADiGator_ft_1_XX_ADiGatorJac.ADiGator_state_derivative_11.Gator2Data;
% ADiGator Start Derivative Computations
%User Line: % function that computes the state derivative
global auxdata 
% Deriv 1 Line: global
%User Line: global
%User Line: % assemble state
rbar.dX = x.dX(1);
% Deriv 1 Line: rbar.dX = x.dX(1);
rbar.f = x.f(1);
% Deriv 1 Line: rbar.f = x.f(1);
%User Line: rbar = x(1);
thetabar.dX = x.dX(2);
% Deriv 1 Line: thetabar.dX = x.dX(2);
thetabar.f = x.f(2);
% Deriv 1 Line: thetabar.f = x.f(2);
%User Line: thetabar = x(2);
ubar.dX = x.dX(3);
% Deriv 1 Line: ubar.dX = x.dX(3);
ubar.f = x.f(3);
% Deriv 1 Line: ubar.f = x.f(3);
%User Line: ubar = x(3);
vbar.dX = x.dX(4);
% Deriv 1 Line: vbar.dX = x.dX(4);
vbar.f = x.f(4);
% Deriv 1 Line: vbar.f = x.f(4);
%User Line: vbar = x(4);
%User Line: % the primer vector is always aligned with the velocity
yaw.dX = u.dX;
% Deriv 1 Line: yaw.dX = u.dX;
yaw.f = u.f;
% Deriv 1 Line: yaw.f = u.f;
%User Line: yaw = u;
alpha.f = 0.6154797086703873;
% Deriv 1 Line: alpha.f =  atan(1/sqrt(2));
%User Line: alpha = atan(1/sqrt(2));
%User Line: % Solar-sail acceleration in local frame
a_RSW.f = [0;0;0];
% Deriv 1 Line: a_RSW.f =  zeros(3, 1);
%User Line: a_RSW = zeros(3, 1);
cada1f1 = cos(alpha.f);
% Deriv 1 Line: cada1f1 = cos(alpha.f);
cada1f2 = cada1f1^2;
% Deriv 1 Line: cada1f2 = cada1f1^2;
cada1f3 = auxdata.a0bar*cada1f2;
% Deriv 1 Line: cada1f3 = auxdata.a0bar*cada1f2;
cada1f4 = sin(alpha.f);
% Deriv 1 Line: cada1f4 = sin(alpha.f);
cada1f5 = cada1f3*cada1f4;
% Deriv 1 Line: cada1f5 = cada1f3*cada1f4;
cada2f1dX = -sin(yaw.f).*yaw.dX;
cada2f1 = cos(yaw.f);
cada1f6dXdX = yaw.dX.*cada2f1dX;
cada1f6dX = cada2f1*yaw.dX;
% Deriv 1 Line: cada1f6dX = cos(yaw.f).*yaw.dX;
cada1f6 = sin(yaw.f);
% Deriv 1 Line: cada1f6 = sin(yaw.f);
cada1f7dXdX = cada1f5.*cada1f6dXdX;
cada1f7dX = cada1f5*cada1f6dX;
% Deriv 1 Line: cada1f7dX = cada1f5.*cada1f6dX;
cada1f7 = cada1f5*cada1f6;
% Deriv 1 Line: cada1f7 = cada1f5*cada1f6;
a_RSW.dXdX = cada1f7dXdX; a_RSW.dX = cada1f7dX;
% Deriv 1 Line: a_RSW.dX = cada1f7dX;
a_RSW.f(1) = cada1f7;
% Deriv 1 Line: a_RSW.f(1) = cada1f7;
%User Line: a_RSW(1) = auxdata.a0bar*cos(alpha).^2.*sin(alpha).*sin(yaw);
cada1f1 = cos(alpha.f);
% Deriv 1 Line: cada1f1 = cos(alpha.f);
cada1f2 = cada1f1^2;
% Deriv 1 Line: cada1f2 = cada1f1^2;
cada1f3 = auxdata.a0bar*cada1f2;
% Deriv 1 Line: cada1f3 = auxdata.a0bar*cada1f2;
cada1f4 = sin(alpha.f);
% Deriv 1 Line: cada1f4 = sin(alpha.f);
cada1f5 = cada1f3*cada1f4;
% Deriv 1 Line: cada1f5 = cada1f3*cada1f4;
cada2f1dX = cos(yaw.f).*yaw.dX;
cada2f1 = sin(yaw.f);
cada2f2dX = -cada2f1dX;
cada2f2 = uminus(cada2f1);
cada1f6dXdX = yaw.dX.*cada2f2dX;
cada1f6dX = cada2f2*yaw.dX;
% Deriv 1 Line: cada1f6dX = -sin(yaw.f).*yaw.dX;
cada1f6 = cos(yaw.f);
% Deriv 1 Line: cada1f6 = cos(yaw.f);
cada1f7dXdX = cada1f5.*cada1f6dXdX;
cada1f7dX = cada1f5*cada1f6dX;
% Deriv 1 Line: cada1f7dX = cada1f5.*cada1f6dX;
cada1f7 = cada1f5*cada1f6;
% Deriv 1 Line: cada1f7 = cada1f5*cada1f6;
cada1td1 =  zeros(2,1);
% Deriv 1 Line: cada1td1 = zeros(2,1);
cada1td1dX = cada1f7dXdX;
cada1td1(2) = cada1f7dX;
% Deriv 1 Line: cada1td1(2) = cada1f7dX;
cada2f1dX = a_RSW.dXdX(1);
cada2f1 = a_RSW.dX(1);
cada2td1 = zeros(2,1);
cada2td1(1) = cada2f1dX;
cada2td1(2) = cada1td1dX(1);
cada1td1dX = cada2td1;
cada1td1(1) = cada2f1;
% Deriv 1 Line: cada1td1(1) = a_RSW.dX(1);
a_RSW.dXdX = cada1td1dX; a_RSW.dX = cada1td1;
% Deriv 1 Line: a_RSW.dX = cada1td1;
a_RSW.f(2) = cada1f7;
% Deriv 1 Line: a_RSW.f(2) = cada1f7;
%User Line: a_RSW(2) = auxdata.a0bar*cos(alpha).^2.*sin(alpha).*cos(yaw);
%User Line: % assemble EOMs
drbar.dX = auxdata.eta*ubar.dX;
% Deriv 1 Line: drbar.dX = auxdata.eta.*ubar.dX;
drbar.f = ubar.f*auxdata.eta;
% Deriv 1 Line: drbar.f = ubar.f*auxdata.eta;
%User Line: drbar = ubar*auxdata.eta;
cada1td1 =  zeros(2,1);
% Deriv 1 Line: cada1td1 = zeros(2,1);
cada2f1dX = -vbar.dX./rbar.f.^2.*rbar.dX;
cada2f1 = vbar.dX/rbar.f;
cada1td1dX = cada2f1dX;
cada1td1(2) = cada2f1;
% Deriv 1 Line: cada1td1(2) = vbar.dX./rbar.f;
cada2f1 = cada1td1(1);
cada2f2dX = -vbar.dX;
cada2f2 = uminus(vbar.f);
cada2f3dX = 2.*rbar.f.^(2-1).*rbar.dX;
cada2f3 = rbar.f^2;
cada2td1 = zeros(2,1);
cada2td1(2) = cada2f2dX./cada2f3;
cada2td1(1) = cada2td1(1) + -cada2f2./cada2f3.^2.*cada2f3dX;
cada2f4dX = cada2td1;
cada2f4 = cada2f2/cada2f3;
cada2f5dX = rbar.dX.*cada2f4dX;
cada2f5 = cada2f4*rbar.dX;
cada2f6dX = cada2f5dX;
cada2f6 = cada2f1 + cada2f5;
cada2td1 = zeros(3,1);
cada2td1(Gator2Data.Index1) = cada2f6dX;
cada2td1(2) = cada1td1dX(1);
cada1td1dX = cada2td1;
cada1td1(1) = cada2f6;
% Deriv 1 Line: cada1td1(1) = cada1td1(1) + -vbar.f./rbar.f.^2.*rbar.dX;
cada1f1dXdX = cada1td1dX; cada1f1dX = cada1td1;
% Deriv 1 Line: cada1f1dX = cada1td1;
cada1f1 = vbar.f/rbar.f;
% Deriv 1 Line: cada1f1 = vbar.f/rbar.f;
dtheta.dXdX = auxdata.eta.*cada1f1dXdX;
dtheta.dX = auxdata.eta*cada1f1dX;
% Deriv 1 Line: dtheta.dX = auxdata.eta.*cada1f1dX;
dtheta.f = cada1f1*auxdata.eta;
% Deriv 1 Line: dtheta.f = cada1f1*auxdata.eta;
%User Line: dtheta = vbar./rbar*auxdata.eta;
cada2f1dX = 1.*vbar.f.^(1-1).*vbar.dX;
cada2f1 = vbar.f^1;
cada2f2dX = 2.*cada2f1dX;
cada2f2 = 2*cada2f1;
cada1f1dXdX = vbar.dX.*cada2f2dX;
cada1f1dX = cada2f2*vbar.dX;
% Deriv 1 Line: cada1f1dX = 2.*vbar.f.^(2-1).*vbar.dX;
cada1f1 = vbar.f^2;
% Deriv 1 Line: cada1f1 = vbar.f^2;
cada1td1 =  zeros(2,1);
% Deriv 1 Line: cada1td1 = zeros(2,1);
cada2td1 = zeros(2,1);
cada2td1(2) = cada1f1dXdX./rbar.f;
cada2td1(1) = cada2td1(1) + -cada1f1dX./rbar.f.^2.*rbar.dX;
cada2f1dX = cada2td1;
cada2f1 = cada1f1dX/rbar.f;
cada1td1dX = cada2f1dX;
cada1td1(2) = cada2f1;
% Deriv 1 Line: cada1td1(2) = cada1f1dX./rbar.f;
cada2f1 = cada1td1(1);
cada2f2dX = -cada1f1dX;
cada2f2 = uminus(cada1f1);
cada2f3dX = 2.*rbar.f.^(2-1).*rbar.dX;
cada2f3 = rbar.f^2;
cada2td1 = zeros(2,1);
cada2td1(2) = cada2f2dX./cada2f3;
cada2td1(1) = cada2td1(1) + -cada2f2./cada2f3.^2.*cada2f3dX;
cada2f4dX = cada2td1;
cada2f4 = cada2f2/cada2f3;
cada2f5dX = rbar.dX.*cada2f4dX;
cada2f5 = cada2f4*rbar.dX;
cada2f6dX = cada2f5dX;
cada2f6 = cada2f1 + cada2f5;
cada2td1 = zeros(4,1);
cada2td1(Gator2Data.Index2) = cada2f6dX;
cada2td1(Gator2Data.Index3) = cada1td1dX(Gator2Data.Index4);
cada1td1dX = cada2td1;
cada1td1(1) = cada2f6;
% Deriv 1 Line: cada1td1(1) = cada1td1(1) + -cada1f1./rbar.f.^2.*rbar.dX;
cada1f2dXdX = cada1td1dX; cada1f2dX = cada1td1;
% Deriv 1 Line: cada1f2dX = cada1td1;
cada1f2 = cada1f1/rbar.f;
% Deriv 1 Line: cada1f2 = cada1f1/rbar.f;
cada2f1dX = 1.*rbar.f.^(1-1).*rbar.dX;
cada2f1 = rbar.f^1;
cada2f2dX = 2.*cada2f1dX;
cada2f2 = 2*cada2f1;
cada1f3dXdX = rbar.dX.*cada2f2dX;
cada1f3dX = cada2f2*rbar.dX;
% Deriv 1 Line: cada1f3dX = 2.*rbar.f.^(2-1).*rbar.dX;
cada1f3 = rbar.f^2;
% Deriv 1 Line: cada1f3 = rbar.f^2;
cada2f1dX = 2.*cada1f3.^(2-1).*cada1f3dX;
cada2f1 = cada1f3^2;
cada2f2dX = -(-1)./cada2f1.^2.*cada2f1dX;
cada2f2 = (-1)/cada2f1;
cada2td1 = cada1f3dX.*cada2f2dX;
cada2td1 = cada2td1 + cada2f2.*cada1f3dXdX;
cada1f4dXdX = cada2td1;
cada1f4dX = cada2f2*cada1f3dX;
% Deriv 1 Line: cada1f4dX = -1./cada1f3.^2.*cada1f3dX;
cada1f4 = 1/cada1f3;
% Deriv 1 Line: cada1f4 = 1/cada1f3;
cada1td1dX = cada1f2dXdX; cada1td1 = cada1f2dX;
% Deriv 1 Line: cada1td1 = cada1f2dX;
cada2f1dX = cada1td1dX(Gator2Data.Index5);
cada2f1 = cada1td1(1);
cada2f2dX = -cada1f4dXdX;
cada2f2 = uminus(cada1f4dX);
cada2td1 = cada2f1dX;
cada2td1(1) = cada2td1(1) + cada2f2dX;
cada2f3dX = cada2td1;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(4,1);
cada2td1(Gator2Data.Index6) = cada2f3dX;
cada2td1(Gator2Data.Index7) = cada1td1dX(Gator2Data.Index8);
cada1td1dX = cada2td1;
cada1td1(1) = cada2f3;
% Deriv 1 Line: cada1td1(1) = cada1td1(1) + -cada1f4dX;
cada1f5dXdX = cada1td1dX; cada1f5dX = cada1td1;
% Deriv 1 Line: cada1f5dX = cada1td1;
cada1f5 = cada1f2 - cada1f4;
% Deriv 1 Line: cada1f5 = cada1f2 - cada1f4;
cada1f6dXdX = auxdata.eta.*cada1f5dXdX;
cada1f6dX = auxdata.eta*cada1f5dX;
% Deriv 1 Line: cada1f6dX = auxdata.eta.*cada1f5dX;
cada1f6 = cada1f5*auxdata.eta;
% Deriv 1 Line: cada1f6 = cada1f5*auxdata.eta;
cada1f7dXdX = a_RSW.dXdX(1);
cada1f7dX = a_RSW.dX(1);
% Deriv 1 Line: cada1f7dX = a_RSW.dX(1);
cada1f7 = a_RSW.f(1);
% Deriv 1 Line: cada1f7 = a_RSW.f(1);
cada1td1 =  zeros(3,1);
% Deriv 1 Line: cada1td1 = zeros(3,1);
cada1td1dX = cada1f6dXdX;
cada1td1(Gator1Data.Index1) = cada1f6dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index1) = cada1f6dX;
cada2f1 = cada1td1(3);
cada2f2dX = cada1f7dXdX;
cada2f2 = cada2f1 + cada1f7dX;
cada2td1 = zeros(5,1);
cada2td1(5) = cada2f2dX;
cada2td1(Gator2Data.Index9) = cada1td1dX(Gator2Data.Index10);
cada1td1dX = cada2td1;
cada1td1(3) = cada2f2;
% Deriv 1 Line: cada1td1(3) = cada1td1(3) + cada1f7dX;
dubar.dXdX = cada1td1dX; dubar.dX = cada1td1;
% Deriv 1 Line: dubar.dX = cada1td1;
dubar.f = cada1f6 + cada1f7;
% Deriv 1 Line: dubar.f = cada1f6 + cada1f7;
%User Line: dubar = (vbar.^2./rbar - 1./rbar.^2)*auxdata.eta + a_RSW(1);
cada1f1dX = uminus(ubar.dX);
% Deriv 1 Line: cada1f1dX = -ubar.dX;
cada1f1 = uminus(ubar.f);
% Deriv 1 Line: cada1f1 = uminus(ubar.f);
cada1td1 =  zeros(2,1);
% Deriv 1 Line: cada1td1 = zeros(2,1);
cada2f1dX = cada1f1dX.*vbar.dX;
cada2f1 = vbar.f*cada1f1dX;
cada1td1dX = cada2f1dX;
cada1td1(1) = cada2f1;
% Deriv 1 Line: cada1td1(1) = vbar.f.*cada1f1dX;
cada2f1 = cada1td1(2);
cada2f2dX = vbar.dX.*cada1f1dX;
cada2f2 = cada1f1*vbar.dX;
cada2f3dX = cada2f2dX;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(2,1);
cada2td1(1) = cada2f3dX;
cada2td1(2) = cada1td1dX(1);
cada1td1dX = cada2td1;
cada1td1(2) = cada2f3;
% Deriv 1 Line: cada1td1(2) = cada1td1(2) + cada1f1.*vbar.dX;
cada1f2dXdX = cada1td1dX; cada1f2dX = cada1td1;
% Deriv 1 Line: cada1f2dX = cada1td1;
cada1f2 = cada1f1*vbar.f;
% Deriv 1 Line: cada1f2 = cada1f1*vbar.f;
cada1td1 =  zeros(3,1);
% Deriv 1 Line: cada1td1 = zeros(3,1);
cada2tempdX = rbar.dX(Gator2Data.Index11);
cada2td1 = zeros(4,1);
cada2td1(Gator2Data.Index12) = cada1f2dXdX./rbar.f;
cada2td1(Gator2Data.Index13) = cada2td1(Gator2Data.Index13) + -cada1f2dX(:)./rbar.f.^2.*cada2tempdX;
cada2f1dX = cada2td1;
cada2f1 = cada1f2dX/rbar.f;
cada1td1dX = cada2f1dX;
cada1td1(Gator1Data.Index2) = cada2f1;
% Deriv 1 Line: cada1td1(Gator1Data.Index2) = cada1f2dX./rbar.f;
cada2f1 = cada1td1(1);
cada2f2dX = -cada1f2dX;
cada2f2 = uminus(cada1f2);
cada2f3dX = 2.*rbar.f.^(2-1).*rbar.dX;
cada2f3 = rbar.f^2;
cada2td1 = zeros(3,1);
cada2td1(Gator2Data.Index14) = cada2f2dX./cada2f3;
cada2td1(1) = cada2td1(1) + -cada2f2./cada2f3.^2.*cada2f3dX;
cada2f4dX = cada2td1;
cada2f4 = cada2f2/cada2f3;
cada2f5dX = rbar.dX.*cada2f4dX;
cada2f5 = cada2f4*rbar.dX;
cada2f6dX = cada2f5dX;
cada2f6 = cada2f1 + cada2f5;
cada2td1 = zeros(7,1);
cada2td1(Gator2Data.Index15) = cada2f6dX;
cada2td1(Gator2Data.Index16) = cada1td1dX(Gator2Data.Index17);
cada1td1dX = cada2td1;
cada1td1(1) = cada2f6;
% Deriv 1 Line: cada1td1(1) = cada1td1(1) + -cada1f2./rbar.f.^2.*rbar.dX;
cada1f3dXdX = cada1td1dX; cada1f3dX = cada1td1;
% Deriv 1 Line: cada1f3dX = cada1td1;
cada1f3 = cada1f2/rbar.f;
% Deriv 1 Line: cada1f3 = cada1f2/rbar.f;
cada1f4dXdX = auxdata.eta.*cada1f3dXdX;
cada1f4dX = auxdata.eta*cada1f3dX;
% Deriv 1 Line: cada1f4dX = auxdata.eta.*cada1f3dX;
cada1f4 = cada1f3*auxdata.eta;
% Deriv 1 Line: cada1f4 = cada1f3*auxdata.eta;
cada1f5dXdX = a_RSW.dXdX(2);
cada1f5dX = a_RSW.dX(2);
% Deriv 1 Line: cada1f5dX = a_RSW.dX(2);
cada1f5 = a_RSW.f(2);
% Deriv 1 Line: cada1f5 = a_RSW.f(2);
cada1td1 =  zeros(4,1);
% Deriv 1 Line: cada1td1 = zeros(4,1);
cada1td1dX = cada1f4dXdX;
cada1td1(Gator1Data.Index3) = cada1f4dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index3) = cada1f4dX;
cada2f1 = cada1td1(4);
cada2f2dX = cada1f5dXdX;
cada2f2 = cada2f1 + cada1f5dX;
cada2td1 = zeros(8,1);
cada2td1(8) = cada2f2dX;
cada2td1(Gator2Data.Index18) = cada1td1dX(Gator2Data.Index19);
cada1td1dX = cada2td1;
cada1td1(4) = cada2f2;
% Deriv 1 Line: cada1td1(4) = cada1td1(4) + cada1f5dX;
dvbar.dXdX = cada1td1dX; dvbar.dX = cada1td1;
% Deriv 1 Line: dvbar.dX = cada1td1;
dvbar.f = cada1f4 + cada1f5;
% Deriv 1 Line: dvbar.f = cada1f4 + cada1f5;
%User Line: dvbar = -ubar*vbar./rbar*auxdata.eta             + a_RSW(2);
cada1td1 =  zeros(10,1);
% Deriv 1 Line: cada1td1 = zeros(10,1);
cada1td1(4) = drbar.dX;
% Deriv 1 Line: cada1td1(4) = drbar.dX;
cada1td1dX = dtheta.dXdX;
cada1td1(Gator1Data.Index4) = dtheta.dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index4) = dtheta.dX;
cada2td1 = zeros(8,1);
cada2td1(Gator2Data.Index20) = dubar.dXdX;
cada2td1(Gator2Data.Index21) = cada1td1dX(Gator2Data.Index22);
cada1td1dX = cada2td1;
cada1td1(Gator1Data.Index5) = dubar.dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index5) = dubar.dX;
cada2td1 = zeros(16,1);
cada2td1(Gator2Data.Index23) = dvbar.dXdX;
cada2td1(Gator2Data.Index24) = cada1td1dX(Gator2Data.Index25);
cada1td1dX = cada2td1;
cada1td1(Gator1Data.Index6) = dvbar.dX;
% Deriv 1 Line: cada1td1(Gator1Data.Index6) = dvbar.dX;
xdot.dXdX = cada1td1dX; xdot.dX = cada1td1;
% Deriv 1 Line: xdot.dX = cada1td1;
xdot.f = [drbar.f;dtheta.f;dubar.f;dvbar.f];
% Deriv 1 Line: xdot.f = [drbar.f;dtheta.f;dubar.f;dvbar.f];
%User Line: xdot = [drbar; dtheta; dubar; dvbar];
end


function ADiGator_LoadData()
global ADiGator_ft_1_XX_ADiGatorJac
ADiGator_ft_1_XX_ADiGatorJac = load('ft_1_XX_ADiGatorJac.mat');
return
end